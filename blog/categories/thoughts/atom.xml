<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: thoughts | Wern Ancheta]]></title>
  <link href="http://anchetawern.github.io/blog/categories/thoughts/atom.xml" rel="self"/>
  <link href="http://anchetawern.github.io/"/>
  <updated>2014-07-24T18:33:48+08:00</updated>
  <id>http://anchetawern.github.io/</id>
  <author>
    <name><![CDATA[Wern Ancheta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Being a dark matter developer must be nice]]></title>
    <link href="http://anchetawern.github.io/blog/2014/03/12/being-a-dark-matter-developer-must-be-nice/"/>
    <updated>2014-03-12T11:45:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2014/03/12/being-a-dark-matter-developer-must-be-nice</id>
    <content type="html"><![CDATA[<p>It must be nice to be a dark matter developer. But before I go ahead and start going through why its nice to be a dark matter developer let&rsquo;s make sure that were all on the same boat. First what are dark matter developers?</p>

<ul>
<li>they don&rsquo;t read blogs</li>
<li>they don&rsquo;t write blogs</li>
<li>they don&rsquo;t follow Paul Irish on Twitter</li>
<li>they don&rsquo;t release code on Github</li>
<li>they only learn what their boss told them to learn</li>
<li>they don&rsquo;t know what hacker news is</li>
<li>they don&rsquo;t discuss tech outside of work</li>
<li>they don&rsquo;t go to conferences</li>
<li>they only use stackoverflow to seek answers</li>
<li>they don&rsquo;t listen to podcasts</li>
<li>they don&rsquo;t need to update themselves of the cutting edge</li>
<li>they don&rsquo;t experiment on different technologies</li>
<li>they don&rsquo;t learn on their free time</li>
<li>they don&rsquo;t subscribe to newsletters</li>
</ul>


<p>I&rsquo;m not saying that this is true for all dark matter developers. But most of the items above are definitely true for some developers even if they don&rsquo;t necessarily consider themselves DMD&rsquo;s.</p>

<!-- more -->


<h4>Ok so why?</h4>

<ul>
<li>they have lots of time in their hands for the really important things in life (family, friends, hobbies, etc.)</li>
<li>they don&rsquo;t need to filter through all the noise in tech (twitter news feed, newsletters, podcasts etc)</li>
<li>they get their job done</li>
</ul>


<p>Let me dive into it a little bit.</p>

<h4>They have lots of time in their hands</h4>

<p>DMD&rsquo;s are free to use all of their free time with the things they want to do. They can just indulge in their hobbies, spend some quality time with their families or just watch season 1-9 of Supernatural or God of Thrones with no care in the world. DMD&rsquo;s also don&rsquo;t need to care about the time they spend doing these activities so they can totally immerse themselves and enjoy their time. They don&rsquo;t need to worry whether they are already outdated. To them programming is just a job. And surely they don&rsquo;t want to code outside their job. I believe its a good thing. Because they can spend all their free time without ever worrying if they will get left behind.</p>

<h4>They don&rsquo;t need to filter through all the noise in tech</h4>

<p>DMD&rsquo;s don&rsquo;t care about all the crap that&rsquo;s happening in the tech scene. They don&rsquo;t know what Shoptalk Show, Ruby Rogues or JavaScript Jabber is. They don&rsquo;t know Paul Irish, Ilya Grigorik, Addy Osmani, Steve Souders, Nicole Sullivan, Peter Cooper, or Jeffrey Way is. They haven&rsquo;t subscribed to JavaScript Weekly, HTML5 Weekly, Web Design Weekly or StatusCode. They only know what they need to know or what they need to know in order to get their job done. They&rsquo;re only consuming the minimal information needed to survive as a developer. Again I believe its a good thing. Sometimes most of the information from these sources are really unimportant.</p>

<h4>They get their job done</h4>

<p>Lastly they get their job done and they do it well. Sure they might still be using Dreamweaver (or maybe notepad) in building websites but they get the job done. They might be cranking out procedural code here and there but they&rsquo;re getting the job done. They might not know what TDD or BDD is. They might not know what linting or static code analysis is but they get the job done. They might not be using the tools (Sublime Test, Chrome Dev Tools, Grunt, SASS, CoffeeScript, Backbone, Angular, Node) that all the cool kids in town are using but they get the job done. They might not be using Frameworks but their code is fast as hell. They might not be writing tests for their code but their program works. They get their job done without ever worrying if their practices are already outdated. Or the tools that they are using can still be improved in order for them to be more productive. I believe there&rsquo;s a beauty in this because they can just focus on the task at hand like painters or artists.</p>

<h4>Closing Thoughts</h4>

<p>Of course with anything there are downsides but I just wanted to focus on the positive side of being a Dark Matter Developer in this post. Cheers to all the Dark Matter Developer&rsquo;s out there! Even if you might not read this because you&rsquo;re always busy getting things done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to stay healthy as a developer]]></title>
    <link href="http://anchetawern.github.io/blog/2013/05/11/how-to-stay-healthy-as-a-developer/"/>
    <updated>2013-05-11T19:14:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2013/05/11/how-to-stay-healthy-as-a-developer</id>
    <content type="html"><![CDATA[<p>Developers are not really the healthiest group of people in the planet simply because our faces are just buried in front of the computer 8 hours a day (or even more) 7 days a week. Were just sitting all day thinking of how to solve a problem, which technique to implement, and writing code.</p>

<!--More-->


<p>Here are the things that I personally observe in order to stay healthy:</p>

<ul>
<li>Exercise</li>
<li>Eat healthy foods</li>
<li>Stand while working</li>
<li>Sleep well</li>
<li>Take breaks</li>
</ul>


<h3>Exercise</h3>

<p>Always try to get atleast an hour of exercise everyday. Doesn&rsquo;t matter which time you exercise(either morning or afternoon) or what type of exercise you do. What&rsquo;s important is that you enjoy exercising and don&rsquo;t think of anything else while doing it.
I personally like brisk walking, jogging and running. I live close to a spacious school ground and that&rsquo;s where I usually exercise so there&rsquo;s really no excuse in not exercising.</p>

<h3>Eat healthy foods</h3>

<p>Always try to eat fruits, vegetables and have soup for every meal.
Soup helps in making the food easier to digest.
You can also try to eat less meat since meat is harder to digest than vegetable.
If you&rsquo;re the carnivorous type then there&rsquo;s no excuse in drinking 8 &ndash; 10 glasses of water everyday. Actually you can drink more if you&rsquo;re sweating a lot when exercising. Water helps in digestion, combine it with fiber which you can get from <a href="http://www.doctoroz.com/videos/50-fiber-rich-foods">a whole bunch of fruits and vegetables</a> leads to a healthier stomach.</p>

<p>Also try chew the food well, eating a meal in 20 to 30 minutes is a good indication that you&rsquo;re chewing your food well. The stomach digests the food that we eat but digestion actually starts in the mouth when we chew our food.
This will lead to better digestion which leads to better stomach and colon health.</p>

<h3>Stand while working</h3>

<p>Try to get a standing desk. Sitting is not good especially if you don&rsquo;t take frequent breaks.
If you don&rsquo;t have the budget or you&rsquo;re earning for something else you can always try to look for an alternative standing desk. I personally use our chest and drawer as my standing desk simply because it matches my elbow height and I feel comfortable using it.</p>

<h3>Sleep well</h3>

<p>Always try to get atleast 7 &ndash; 8 hours of sleep each night.
This ensures that our mind is in its optimum state when we wake up.
Fresh, happy and ready to solve some problems.</p>

<h3>Take breaks</h3>

<p>Take breaks every 50 &ndash; 60 minutes. Stretch up and do a micro-exercise, its a good way to make sure that your blood is flowing properly. Venous diseases like hemorrhoids, deep vein thrombosis, and varicose veins are born from not moving too much and staying in just one position all day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Working Remotely]]></title>
    <link href="http://anchetawern.github.io/blog/2013/04/28/on-working-remotely/"/>
    <updated>2013-04-28T17:52:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2013/04/28/on-working-remotely</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a year since I started working remotely and I never regret any moment of it. In this post I&rsquo;m going to share some of my thoughts in working remotely. Some of the pros and cons, and how to stay productive even if there&rsquo;s no boss breathing down your neck.</p>

<!--More-->


<p>For those who don&rsquo;t know what telecommuting is. Here&rsquo;s a helpful description from Wikipedia:</p>

<p><blockquote><p>Telecommuting, remote work, telework is a work arrangement in which employees do not commute to a central place of work.<br/>A person who telecommutes is known as a &ldquo;telecommuter&rdquo;, &ldquo;teleworker&rdquo;, and sometimes as a &ldquo;home-sourced&rdquo; employee.</p></blockquote></p>

<p>Ok now that were on the same page let&rsquo;s begin.</p>

<h3>Pros</h3>

<ul>
<li>Less interruptions.</li>
<li>Less distractions (only if you are disciplined).</li>
<li>Less time wasted on transportation.</li>
<li>Comfortable work environment.</li>
<li>More productive.</li>
</ul>


<h3>Cons</h3>

<ul>
<li><p>No social interactions. Telecommute workers will basically miss out on random office chats and other social events that happens outside the office (E.g. company paid outings).</p></li>
<li><p>There&rsquo;s so little trust. This is basically because the person that you are working with doesn&rsquo;t see if you&rsquo;re really working or not.</p></li>
<li><p>You can&rsquo;t ask for help. Team mates can be working while you&rsquo;re sleeping and most of the time they&rsquo;re too busy with their own work.</p></li>
<li><p>You can&rsquo;t see what other employees in the company are working on. Though this is normal I believe there is a benefit in knowing what projects others are working on especially the senior one&rsquo;s. You know the type of office interaction where you can ask questions to other employees and learn something from their answers.</p></li>
</ul>


<h3>How to Stay Productive</h3>

<p>Telecommuting is hard if you don&rsquo;t have the discipline to work without a boss breathing down your neck every second of the day. So the main ingredient needed to successfuly work remotely is discipline.
The kind of discipline that will keep you from looking at your Facebook or Twitter stream every 5 minutes. Or watching some dancing cat ninjas on Youtube. Or endlessly browsing Stumbleupon.</p>

<p>Another important ingredient is love for the work that you do. By loving the work that you do you will have no problem working overtime if you don&rsquo;t think you&rsquo;ve done good enough for the day.</p>

<p>Lastly, you should always have a todo list so that you can keep track of what to do, what&rsquo;s done and what needs some review.</p>

<p>That&rsquo;s all there is to it really. You don&rsquo;t need the Pomodoro technique or any other technique to be productive. All you need is discipline and love for your work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This crazy world of web development]]></title>
    <link href="http://anchetawern.github.io/blog/2013/04/13/this-crazy-world-of-web-development/"/>
    <updated>2013-04-13T13:45:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2013/04/13/this-crazy-world-of-web-development</id>
    <content type="html"><![CDATA[<p>Need a css framework? There&rsquo;s Foundation, Bootstrap, HTML Kickstart, Kube, Skeleton, Baseline, Gumby, Ink, Groundwork.
There&rsquo;s also a bunch of others which are based from Bootstrap: Flatstrap, Metro Bootstrap.</p>

<p>Need a boilerplate? There&rsquo;s the HTML5 Boilerplate, 320 and up, HTML5Bones.</p>

<p>Need a package manager? There&rsquo;s component, ender, bower, jam, NPM.</p>

<p>Need a browser tool? There&rsquo;s Firebug, Chrome Developer tools, Page Speed Insights, JSON View, YSlow, MeasureIt, Colorzilla, CSS Usage, PageSpeed, SEO Doctor.</p>

<p>Need a coding tool? There&rsquo;s Codekit(for Mac), ScoutApp (for Windows), LiveReload, Yeoman, Grunt, Lumbar, Yeoman, Sublime Text, Brackets.</p>

<p>Need a css base? There&rsquo;s reset.css and normalize.css.</p>

<p>Need a CSS Compiler? There&rsquo;s SASS + Compass, LESS.</p>

<p>Need a validator/linting tool? There&rsquo;s JSLint, JSHint, JSON Lint, HTML Validator, CSS Validator.</p>

<p>Need a static site generator? There&rsquo;s Jekyll, Octopress, Middleman.</p>

<p>Need an MVC/MVP/MVVM Framework? There&rsquo;s Backbone, Ember, Knockout, Angular.</p>

<p>Tired of writing helper functions from scratch? There&rsquo;s underscore.js, sugar.js, lo-dash, yepnope.js, modernizr, accounting.js.</p>

<p>Need to work with SVG? There&rsquo;s Processing.js, Raphael.js, SVG Kit and SVG Web.</p>

<p>How about templating libraries? There&rsquo;s Smarty, Handlebars, Mustache, Hogan.js.</p>

<p>Need a JavaScript library? There&rsquo;s jQuery, Dojo, Mootools.</p>

<p>You think JavaScript is ugly? There&rsquo;s Coffeescript, TypeScript, Dart.</p>

<p>Want a back-end framework? There&rsquo;s Ruby on Rails for Ruby, Laravel for PHP, and Django for Python, Node.js.</p>

<p>Need a database? There&rsquo;s MySQL, PostgreSQL, MongoDB, CouchDB, RavenDB.</p>

<p>How about a Software Development Methodology? There&rsquo;s Waterfall, Prototyping, Spiral, RAD, Agile.</p>

<p>How about Design Patterns? There&rsquo;s Singleton, Adapater, Bridge, Facade, Factory and a bunch of others.</p>

<p>Heck there&rsquo;s a lot! The list is endless and it&rsquo;s hard to keep up.
There&rsquo;s always something new everyday.
There&rsquo;s always a new technology, methodology, library, and tool.
There&rsquo;s always a new blog post, video, and podcasts that speaks about these technologies, methodologies, libraries and tools.
There&rsquo;s always a new, cool and faster way to solve problems.</p>

<p>There&rsquo;s always this temptation (in most cases obsession) to check out all the shiny and new stuff, to read all those blog posts which speaks about them.
And before you know it there&rsquo;s no more time left for you to solve the real problems that needs solving.</p>

<p>Most of the tools, libraries and methodologies that comes out everyday is yet another way to solve existing problems.
The only difference is that its newer and it looks sexier. But sooner or later it becomes out of fashion and a shiny new thing will replace it again.</p>

<p>What&rsquo;s important is learning the core technology behind a library, so instead of learning jQuery, Mootools or Dojo we should first learn JavaScript. Instead of learning how to use Bootstrap or Foundation we should learn the basics and important concepts in CSS first. Core technologies that makes the whole platform (the web) work  never gets replaced thus it should be given the priority before the shiny and new stuff. And once your done learning the core technologies you&rsquo;re in a good position to try out some of the shiny and new stuff. And by try I mean giving it a go for a week or so and see if it feels right for you. If it feels right for you and you think it makes you more productive then you should definitely include it in your daily workflow.</p>

<p>Who cares if you&rsquo;re using MS Paint and not Photoshop. Who cares if you&rsquo;re using Notepad or Dreamweaver instead of Sublime Text. Who cares if you&rsquo;re still using <code>alert</code> instead of <code>console.log</code> to debug your JavaScript. If you think you&rsquo;re productive by using some of the old tools then why not right? At the end of the day it doesn&rsquo;t really matter what tools, libraries or methodologies we use as long as we get to solve problems and we make our clients happy by solving them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Like in a Company]]></title>
    <link href="http://anchetawern.github.io/blog/2013/03/10/what-i-like-in-a-company/"/>
    <updated>2013-03-10T10:44:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2013/03/10/what-i-like-in-a-company</id>
    <content type="html"><![CDATA[<p>Perhaps this is one of the posts where I share the things I want.
A few alternative titles might be:</p>

<p><blockquote><p><br/><br/>What kind of Companies do I like to work for?</p></blockquote></p>

<p><blockquote><p>Things I&rsquo;m looking for in a Company</p></blockquote></p>

<p><blockquote><p>What makes a company awesome?</p></blockquote></p>

<!--More-->


<p>I want to work for a company that:</p>

<ul>
<li>Offers a salary that matches my level of competency</li>
<li>Gives a lot of opportunity to grow</li>
<li>Has some nice and awesome people</li>
<li>Gives rasonable deadlines</li>
</ul>


<h3>Offers a salary that matches my level of competency</h3>

<p>As a professional its really important to get paid rightfully with the work that we do.
We do our jobs well and often times we also work beyond the time when we are required to work.
But the exception is that when were just starting out (probably around 1-3 years in the industry)
the priority is to get experience. It doesn&rsquo;t matter if the salary is low because later on
you&rsquo;ll get to demand your salary once you&rsquo;re awesome enough.</p>

<h3>Gives a lot of opportunity to grow</h3>

<p>This is the most important one in the list if you&rsquo;re just starting out.
What I specifically look for in a company is that they&rsquo;re willing to give me work
that involves technologies, tools and methodologies that I do not already know how
to use. This is great because what can you gain from doing things that you already
know over and over and over again? Nothing right?
But you will probably become an expert at doing it.
And you gain the ability to do it blindfolded while your other hand is handcuffed.</p>

<p>Ok going back to the original topic: a company that gives a lot of opportunity to grow.
This is what fresh graduates and people that are fresh in the industry should be looking for.
Because schools only teaches a small fraction of what you would be really working with when you graduate. Its important that you gain the knowledge and experience needed for most of the work that you will be doing in the industry.</p>

<h3>Nice and awesome people</h3>

<p>There will always be douchebags, and people that you can&rsquo;t really work with because of their attitude so its always nice to have some nice people around which are always accomodating, friendly and always ready to answer your questions.
Always offers a piece of advice and always has a suggestion whenever you get yourself in a hole.</p>

<h3>Reasonable Deadlines</h3>

<p>Deadlines are great because it prevents you from working on a project forever.
It prevents you from fooling around while working.
And it keeps you focused on the project.</p>

<p>But some deadlines, especially those that are given by project managers
who have no experience in development are just terrible.</p>

<p>Reasonable deadlines are really important so the developer won&rsquo;t end up
crapifying the code just to catch up to a deadline made for zombie superhumans.
Just like the saying goes:</p>

<p><blockquote><p>Everything that is forced ends up like crap</p></blockquote></p>

<p>Its important that the project manager or anyone who&rsquo;s giving out the deadlines
has a prior experience in development.
Because only then can they make an intelligent decision on what the deadline should be.
Even better is letting the developer estimate how much the specific story or module
will take.</p>

<h3>Conclusion</h3>

<p>That&rsquo;s it for this blog post. At the end of the day you will always have to choose the company where you&rsquo;re happy to work with and that you&rsquo;re enjoying the work that you do for that company. Otherwise you wouldn&rsquo;t last or even if you stay on that company longer, the work that you do will always be badly affected.</p>
]]></content>
  </entry>
  
</feed>
