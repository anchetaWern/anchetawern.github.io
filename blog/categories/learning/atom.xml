<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: learning | Wern Ancheta]]></title>
  <link href="http://anchetaWern.github.io/blog/categories/learning/atom.xml" rel="self"/>
  <link href="http://anchetaWern.github.io/"/>
  <updated>2013-08-18T21:26:33+08:00</updated>
  <id>http://anchetaWern.github.io/</id>
  <author>
    <name><![CDATA[Wern Ancheta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning and how I did it wrong]]></title>
    <link href="http://anchetaWern.github.io/blog/2013/03/03/learning-and-how-i-did-it-wrong/"/>
    <updated>2013-03-03T08:58:00+08:00</updated>
    <id>http://anchetaWern.github.io/blog/2013/03/03/learning-and-how-i-did-it-wrong</id>
    <content type="html"><![CDATA[<p>In this blog post I&rsquo;m going to share some of the mistakes that I did while trying to learn something. Looking at the list below you might say that these are all nice things to do while trying to learn something. But I&rsquo;m going to try explaining below why these kinds of activities are not always good for learning.</p>

<ul>
<li>Watching video tutorials</li>
<li>Reading Books</li>
<li>Learning something that I cannot immediately apply</li>
<li>Taking up online learning classes</li>
</ul>


<!--More-->


<h3>Watching video tutorials</h3>

<p>Video tutorials are a fast and easy way to learn something.
Its not like the classroom setting wherein you have to listen carefully and take note of every important thing that the teacher says so you will have something to review later on for the exams.
Video tutorials are different in the sense that you can skip to a part where you&rsquo;re specifically interested in or repeat viewing the video any time you want.
So you basically keep watching the video tutorial until you finally grok everything that&rsquo;s mentioned in there. You would also try to code up the program that was thought in the video tutorial yourself.</p>

<p>There&rsquo;s actually no problem with this method of learning. We learn faster by doing this but sometimes we often forget the real reason why were doing it and that is to learn.
Sometimes we get too caught up in watching all the videos in that tutorial series and we tend to make the process of learning faster by just going through all the videos without even trying for yourself what you&rsquo;ve learned and applying the things that you&rsquo;ve learned on a project.</p>

<p>This is exactly what happened when I started watching the tutorials over at thenewboston. The guy there really knows how to make things easier to understand by making use of different real world scenarios or analogies. His videos were simply addictive and before I knew it I already watched several of his tutorials on Python and Python game development, Java, PHP, and JavaScript.
I also tried learning Ruby on Rails and a bunch of other programming related stuff but none of those ever stick into my mind because I wasn&rsquo;t applying everything that I&rsquo;ve learned. I was simply watching the videos, tried to code it by myself on notepad++ and then call it a day.</p>

<h3>Reading Books</h3>

<p>Books are also a great way to learn especially e-books.
You can basically skip through the things that interest you the most
in that book. Sometimes there are also exercises
to help you further understand what you&rsquo;ve learned.
But books are often lengthy(400 pages or more) and its easy to lose motivation
when reading a book. But that&rsquo;s the mistake in that.
Books which has 400 pages or more aren&rsquo;t meant to be read from cover to cover.
They&rsquo;re meant as a reference or a guide in your learning.</p>

<h3>Learning something that I cannot immediately apply</h3>

<p>There are lots of things that I want to learn, there are lots of interesting articles about programming and web development that I want to read, there are lots of tools that are coming out that I want to use.
There&rsquo;s just too much that I want to learn but only a few of them can be immediately applied to the things that I&rsquo;m currently doing (E.g. my day job).
These are the things that truly hinders learning the things that are really needed.
It&rsquo;s only a matter of discipline but its really hard to fight the temptations in learning something that&rsquo;s hot and new.</p>

<h3>Taking up online learning classes</h3>

<p>Taking up online classes like the one&rsquo;s found at codeacademy, codeschool and udacity are also a great way to learn but they&rsquo;re also susceptible by some of the things that I&rsquo;ve already mentioned above (E.g. temptation in learning something that is not immediately needed, the focus lies on somewhere else rather than learning and become better).</p>

<p>This post is not meant to criticize online learning classes, books and video tutorials.
We all agree that these are all very good way to learn something.
What I&rsquo;m saying is that its so easy to lead yourself in the wrong direction if you don&rsquo;t know how to make use of these learning resources responsibly.
We must all remember that life is continuous learning process.
It doesn&rsquo;t mean that the learning stops when you&rsquo;ve watched all the videos in the Laravel Course or Regular Expressions Course or JavaScript course.
Often times you&rsquo;ve only learned the basics after taking up these kinds of courses.
But the important thing is that you already know much that you can already level up your skills further with your own hands without relying on a guide or a course.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Should everyone learn how to code?]]></title>
    <link href="http://anchetaWern.github.io/blog/2013/03/03/should-everybody-learn-how-to-code/"/>
    <updated>2013-03-03T08:47:00+08:00</updated>
    <id>http://anchetaWern.github.io/blog/2013/03/03/should-everybody-learn-how-to-code</id>
    <content type="html"><![CDATA[<p>Should everyone learn how to code? That&rsquo;s the question that&rsquo;s been
running on my mind lately. And my answer would be no.
You wouldn&rsquo;t expect your grandpa or grandma to learn how to code,
you wouldn&rsquo;t expect the community worker to learn how to code,
you wouldn&rsquo;t expect a policeman, a politician, a plumber
or a basketball player to learn how to code because it not needed in their daily jobs.</p>

<p>But how about changing the question to something like: Should every children of this generation learn how to code?</p>

<p>My answer for this would be yes, every children of this generation should learn how to code. Were in 2013 and computers are rapidly changing the world.
It&rsquo;s only natural that every children of this age should learn how to make computers do things for them. And that is through coding.
But this doesn&rsquo;t mean that every children of this age should become programmers, software engineers or web developers in the future.
Every children should learn how to code regardless of their future profession.
Because programming allows children to talk to computers and computers are the future.
It allows children to build things, it brings out the creativity in children.
Programming is a great way to improve problem solving skills.</p>

<p>I believe that every school should teach basic computing and programming to children. Its a great skill to have and there are many opportunities waiting for them when they decided to pursue a career in the field of computer science in the future.</p>

<p>And to further support this movement that every children should learn how to code. Here are some resources that would help the children or everyone who wants to learn how to code.</p>

<h3>Interactive</h3>

<ul>
<li><a href="http://www.code.org">code.org</a></li>
<li><a href="http://www.codecademy.com">codeacademy</a></li>
<li><a href="https://www.udacity.com/">udacity</a></li>
<li><a href="http://www.coursehero.com/">coursehero</a></li>
<li><a href="http://www.learnpython.org/">learn python</a></li>
<li><a href="http://www.codeschool.com/">code school</a></li>
<li><a href="http://www.learnstreet.com/">learnstreet</a></li>
<li><a href="http://rubymonk.com/">ruby monk</a></li>
</ul>


<h3>Group Learning</h3>

<ul>
<li><a href="https://p2pu.org/en/">p2pu</a></li>
</ul>


<h3>University</h3>

<ul>
<li><a href="https://www.coursera.org/">coursera</a></li>
<li><a href="https://www.edx.org/courses/">edx</a></li>
</ul>


<h3>Video Tutorials</h3>

<ul>
<li><a href="https://www.khanacademy.org/">khan academy</a></li>
<li><a href="http://thenewboston.org/">thenewboston</a></li>
<li><a href="http://youtube.com/phpacademy">php academy</a></li>
<li><a href="http://www.youtube.com/jreamdesign">jreamdesign</a></li>
<li><a href="http://www.youtube.com/user/mybringback">mybringback</a></li>
</ul>


<h3>Web Development</h3>

<ul>
<li><a href="http://www.webplatform.org/">web platform.org</a></li>
<li><a href="https://developer.mozilla.org/en-US/">Mozilla Developer Network</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things I learned on my second job]]></title>
    <link href="http://anchetaWern.github.io/blog/2013/02/10/things-i-learned-on-my-second-job/"/>
    <updated>2013-02-10T15:58:00+08:00</updated>
    <id>http://anchetaWern.github.io/blog/2013/02/10/things-i-learned-on-my-second-job</id>
    <content type="html"><![CDATA[<p>In this blog post I&rsquo;m going to share some of the things that I learned on my second job.</p>

<!--More-->


<h3>Apache Solr</h3>

<p>Apache Solr is a search platform that&rsquo;s available for different languages like Ruby, PHP, and Java.
Solr&rsquo;s main feature is that its very fast. It returns either XML or JSON.
There&rsquo;s a library available for PHP which is the one that I used. It&rsquo;s called <a href="http://code.google.com/p/solr-php-client/">solr php client</a></p>

<p>Here&rsquo;s a sample query for accessing data that&rsquo;s available in the Solr server:</p>

<p><code>
http://localhost/solr/select/?q=id:%search&amp;wt=json&amp;rows=%max_results
</code></p>

<p>As you can see its just like accessing data from an API like the one provided by Twitter or Facebook.
You can use Solr via server-side or client side.</p>

<p>If you want to access its data via the server-side you can use the <code>file_get_contents()</code> php function or <code>curl</code>.
If you want to access its data via the client-side you can use the <code>$.ajax</code> jQuery function.
But if the Solr server is located on a different server you can use the <code>jsonp</code> data type.</p>

<h3>Wordpress Plugin Development</h3>

<p>I&rsquo;ve also learned about Wordpress Plugin Development and the Wordpress platform as a whole.
<a href="http://codex.wordpress.org/">Codex</a>, the main documentation site for Wordpress has some really good guides and reference for the different functions that are available from Wordpress.</p>

<p>When developing Wordpress plugins you will almost always have to hang out in these 2 pages:</p>

<ul>
<li><a href="http://codex.wordpress.org/Plugin_API/Filter_Reference">Filter Reference</a></li>
<li><a href="http://codex.wordpress.org/Plugin_API/Action_Reference">Action Reference</a></li>
</ul>


<p>In Wordpress filters are used for processing the things that are already outputted by Wordpress like the content of a blog post or the title of your blog. Filters are used to modify, add, or hide content.
This is very useful for filtering out things like profanity in blog posts.</p>

<p>Actions in Wordpress are events that happen inside wordpress like publishing a new blog post or creating a new page or activating a plugin. You can hook into these actions to execute a specific function that will do something when these events happen.</p>

<p>There&rsquo;s also a built-in class for accessing the Wordpress database which is the <a href="http://codex.wordpress.org/Class_Reference/wpdb">WPDB</a> which you will most likely use if the plugin that you&rsquo;re trying to build needs to persist data in a database (E.g for storing settings that your plugin will use).</p>

<h3>API&rsquo;s</h3>

<p>I&rsquo;ve also learned how to use API&rsquo;s like the <a href="http://www.flickr.com/services/api/">Flickr API</a>, <a href="http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ApiReference.html">Amazon Product Advertising API</a>, <a href="http://developer.ebay.com/common/api/">Ebay API</a>, and <a href="http://wiki.freebase.com/wiki/Freebase_API">Freebase API</a>.
Since this will be used by the Wordpress plugin that I&rsquo;m developing.</p>

<p>The Ebay API was particularly easy to use since they have a very good documentation.
And by good documentation I mean things are easy to find.
The documentation also has everything that a developer who is just getting started with using the API wants to know.</p>

<p>The documentation for Amazon Product Advertising API was the exact opposite of the Ebay API documentation.
Things were hard to find and you can&rsquo;t even find examples on how to use the API on languages like PHP.
Thankfully I found this blog post on <a href="http://www.codediesel.com/php/accessing-amazon-product-advertising-api-in-php/">how to access the product advertising API in PHP</a> which made life easier.</p>

<p>The Freebase API was also easy to use because the API itself is relatively simple.
The Freebase API was divided into different services like Search, Image, Text, Topic, etc.
Each of those returns different sets of data in JSON format.
Freebase is already owned by Google so you can basically acquire an API key or access key from the Google API console.</p>

<p>The Flickr API is also comparable to the Amazon Product Advertising API when it comes to difficulty.
Though the documentation is very good it lacks some examples on how to access the API using different languages.
But the <a href="http://phpflickr.com/">PHPFlickr</a> library made my life easier.
All I had to do was to specify the App ID and App secret for my Flickr App which can be created at the <a href="http://www.flickr.com/services/apps/create/">App Garden</a> and then I can just call the methods which I need.</p>

<p>That&rsquo;s all for this blog post. I will continue to update this blog post once I learn more things from my second job.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning List]]></title>
    <link href="http://anchetaWern.github.io/blog/2012/10/11/learning-list/"/>
    <updated>2012-10-11T15:24:00+08:00</updated>
    <id>http://anchetaWern.github.io/blog/2012/10/11/learning-list</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s my current learning list:</p>

<h4>More of Object-oriented PHP and Design Patterns</h4>

<p>I know the basics of object-oriented PHP like Classes, Objects, Constructors, Magic methods, inheritance, autoloading of classes.
I&rsquo;ve also created projects implemented using OOP but I believe I need to learn more about it before I can move to things
like unit testing, and making my own PHP library. I think the <a href="http://php.net/manual/en/language.oop5.php">PHP Documentation</a> is a pretty good place to start.
There&rsquo;s also <a href="http://www.phptherightway.com/">PHP The Right Way</a> and <a href="http://phpbestpractices.org/">PHP Best Practices</a>.
After I&rsquo;m contented with what I know about Object oriented PHP(though I don&rsquo;t know if I&rsquo;ll ever get contented), I&rsquo;ll get my hands dirty on implementing design patterns on PHP.
And once I&rsquo;m done with that I&rsquo;ll probably test drive some of the PHP Frameworks like Symfony, Yii, CakePHP, and Laravel.</p>

<h4>Unit Testing and Automated Tests</h4>

<p>After I gain enough(but what is enough really?) knowledge and experience about Object-oriented PHP I plan on getting my hands
dirty on Unit Testing on PHP. And I think Nettuts has got my back on this with their <a href="http://net.tutsplus.com/sessions/test-driven-php/">Test-driven PHP session</a></p>

<h4>More JavaScript</h4>

<p>There&rsquo;s been a lot of things happening with JavaScript lately. There are lots of things about it that I haven&rsquo;t fully grokked yet.
One of them is closures. I think <a href="http://ejohn.org/apps/learn/">John Resig</a> has already written about it.
I also want to learn about Unit Testing, Script Loaders, Asynchronous Module Definition, implementing design patterns on JavaScript.
And also some other JavaScript libraries like Mootools, Dojo, ExtJS, Ember, Backbone, and YUI.</p>

<h4>Tools</h4>

<p>There are lots of developer tools that I haven&rsquo;t implemented on my workflow yet. Here are some of the Frontend tools that I&rsquo;m urging to use:</p>

<ul>
<li>Yeoman</li>
<li>Compass/SASS/LESS</li>
<li>Grunt</li>
<li>Script Loaders (yepnope.js, head.js, require.js..)</li>
<li>AMD</li>
<li>Testing Libraries (Mocha, Jasmine, QUnit)</li>
<li>Automated Testing (Selenium)</li>
</ul>


<p>And some backend one&rsquo;s:</p>

<ul>
<li>PHP Unit</li>
<li>Doxygen, PHPDocumentor</li>
</ul>


<p>And version control:</p>

<ul>
<li>Mercurial</li>
</ul>


<h4>More on Web API&rsquo;s</h4>

<p>I&rsquo;ve only touched the surfaced with Google Maps API, Facebook Graph API, Twitter API, Tumblr API, and LinkedIn API.
There&rsquo;s still a bunch of them out there that I can get my hands dirty on but I guess I&rsquo;ll just focus on learning more
about what I already know.</p>

<h4>More on the tools that I&rsquo;m currently using</h4>

<p>I only know Git and a little bit of Subversion. And I only know about the commands that I cannot live without.
Like <code>git add</code> , <code>git commit</code> , <code>git push</code> , <code>git branch</code> , <code>git checkout</code>  and <code>git pull</code>
Commands on Subversion are pretty much the same so I won&rsquo;t go ahead and enumerate them all.</p>

<h4>Moving on to other Languages</h4>

<p>I&rsquo;ve started a course on Udacity: <a href="http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012">Introduction to Computer Science</a>.
They&rsquo;re using Python for the course. I really want to learn Python as well. Then maybe I could move on to Django which is a framework for Python.
And after that take on some ASP.Net which I learned a little bit from school but haven&rsquo;t really taken it seriously. And then some Ruby.</p>

<p>By the time I finish half of this list there&rsquo;s probably a lot more tools and new technologies that will come out so I will have to create a new learning list again.
Education is really a life long process. Sometimes you wouldn&rsquo;t even want to take a break.</p>
]]></content>
  </entry>
  
</feed>
