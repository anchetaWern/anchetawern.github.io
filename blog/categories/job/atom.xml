<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: job | Wern Ancheta]]></title>
  <link href="http://wern-ancheta.com/blog/categories/job/atom.xml" rel="self"/>
  <link href="http://wern-ancheta.com/"/>
  <updated>2016-01-04T22:37:01+08:00</updated>
  <id>http://wern-ancheta.com/</id>
  <author>
    <name><![CDATA[Wern Ancheta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Things I learned on my third job]]></title>
    <link href="http://wern-ancheta.com/blog/2014/06/12/things-i-learned-on-my-third-job/"/>
    <updated>2014-06-12T20:51:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2014/06/12/things-i-learned-on-my-third-job</id>
    <content type="html"><![CDATA[<p>Its been 3 months since I joined <a href="http://islickmedia.com/">Islick Media</a>, a Web Development shop based in Palm Desert, California. Just like with my previous jobs I work for them as a remote worker. In this blog post I&rsquo;ll be sharing some of the things I&rsquo;ve learned on the job.</p>

<h3>Synxis</h3>

<p>Synxis is a reservation system. Its a pain in the neck to work with this one. Any code which has something to do with their reservation features are not accessible. At most you can only update the HTML for the header and footer part of the page. Uploading new files is also painful as you either have to install Java so you can run their image uploader or suck it up and upload files one by one.</p>

<h3>Wordpress Theme Customization API</h3>

<p>I&rsquo;ve worked with the Wordpress Theme Customization API on my first project on the company. I&rsquo;ve used it to give the users of the Wordpress theme that I&rsquo;ve created a simple way of customizing the look and feel of the theme. Things like customizing the color of links, header and background images can go a long way in making your Wordpress theme easily customizable to non-programmers.</p>

<h3>Roots</h3>

<p>Roots is a starter theme for Wordpress. Its useful when creating new Wordpress themes as you don&rsquo;t have to write boilerplate code from scratch. It also supports Grunt task runner which makes processing front-end code easier.</p>

<h3>Zillow</h3>

<p>Zillow is a home and real estate marketplace dedicated to helping homeowners, home buyers, sellers, renters, real estate agents, mortgage professionals, landlords and property managers find and share vital information about homes, real estate, mortgages and home improvement.
I&rsquo;ve used their API in providing zestimates (zillow estimates) for real properties.</p>

<h3>Laravel</h3>

<p>This is not the first time that I&rsquo;ve learned about Laravel. Its some sort of a reacquaintance since I first used it in the year 2012 where it was only newly released. Fast-forward to 2014 there&rsquo;s already a bunch of stuff that has changed and improved. Some of my previous knowledge were still of use but I also had to learn new stuff and new way of doing things. I&rsquo;ve learned about the IoC container, and how to make use of external classes the laravel way. I also learned about the authentication class which makes writing the login functionality for your app a breeze.</p>

<h3>Mailing Services</h3>

<p>Mandrill and Mailgun are mailing services that I&rsquo;ve used for sending out emails for my projects. Yes you can pretty much use the built-in mailing server on the server where your app is hosted. But the main advantage of using a mailing service over the built-in mailing server is authentication. With mailing services such as Mandrill or Mailgun you get the benefit of having your email come from a reputable server. This leads to a higher rate of the emails actually making it into your customers inbox and not the spam.</p>

<h3>SPF and DKIM</h3>

<p>SPF and DKIM is a way to authenticate mailing services such as Mandrill and Mailgun to send on behalf of your server. So you can get a cool looking email like: <a href="&#109;&#x61;&#x69;&#108;&#116;&#111;&#58;&#x61;&#x77;&#x65;&#115;&#111;&#109;&#x65;&#x6e;&#101;&#x73;&#115;&#64;&#99;&#111;&#x6f;&#108;&#x6e;&#x65;&#x73;&#115;&#x2e;&#99;&#111;&#109;">&#x61;&#119;&#101;&#x73;&#111;&#109;&#101;&#x6e;&#x65;&#x73;&#115;&#x40;&#x63;&#x6f;&#x6f;&#108;&#110;&#x65;&#115;&#x73;&#x2e;&#99;&#x6f;&#x6d;</a> to work and actually make it to your customers inbox.</p>

<h3>Amazon EC2</h3>

<p>Short for Amazon Elastic Compute Cloud. Its basically a cloud computing platform. You can use it to host web applications and scaling is already taken care of. You can start with a fairly low performance and storage capacity server instance. And once you&rsquo;ve met a certain point where the current instance is no longer performing well. You can just upgrade your current instance and all your stuff would still be in there.</p>

<h3>Stripe</h3>

<p>Stripe is a company that provides a set of APIs for enabling businesses to accept and manage online payments. They have SDKs (Software Development Kit) available for different programming languages. Which is nice since no matter what programming language you&rsquo;re using to write your app you can use the SDK to easily talk with the Stripe API. Stripe uses credit card for payments. One time payment and subscription based payments are automatically handled for you.</p>

<h3>Twilio</h3>

<p>Twilio is a cloud communications company. They allow developers to provide SMS and Voice functionality to websites. I used twilio in my second project (Vmonial) with the company. Vmonial is an app that allows businesses to accept voice testimonials from their clients. I used the Twilio Voice API on the project. You can basically control the flow using XML files (TwiML) which uses tags like <code>&lt;Say&gt;</code>, <code>&lt;Record&gt;</code>, <code>&lt;Play&gt;</code>, <code>&lt;Gather&gt;</code> and <code>&lt;Response&gt;</code>.</p>

<h3>WHM</h3>

<p>WHM is sort of the big mama of cpanel. This is where you can manage cpanel instances, users, third party extensions, and lots of other stuff for managing a server.</p>

<h3>Elastic Search</h3>

<p>Elastic search is an open source, distributed and RESTful search engine. Its like Apache Solr which I&rsquo;ve written about a few times in this blog. Lots of people says really good things about Elastic Search that&rsquo;s why I gave it a try on my third project (Roof99) to handle the search. MySQL was not a choice since its a database and it would be terribly slow for searching. Elastic search on the other hand is a search index. Documents are stored in JSON format and querying can be done by using REST (Representational state transfer) calls.</p>

<h3>Prediction IO</h3>

<p>Prediction IO is an open source machine learning server. You can use it for creating personalized applications. With Prediction IO you can predict your users behavior, offer personalized content (E.g news, ads, jobs), help them discover things that they might like. All of this can be done by having the server silently record the users activity within your app such as viewing, liking, disliking, and rating something.</p>

<h3>Queues</h3>

<p>I&rsquo;ve also learned about queues. Specifically I&rsquo;ve used <a href="http://kr.github.io/beanstalkd/">Beanstalkd</a> in my projects, an open-source queue system. Basically queues allows you to delay the execution of a specific task. A common example is when sending confirmation emails upon user registration. Normally you wouldn&rsquo;t want to send the email immediately once the uer clicks on the sign up button because that would mean they would have to wait for the email to be sent before they can move on. What you would want is to push this task into the queue system and let it do the work for you.</p>

<h3>Phonegap / Cordova</h3>

<p>Phonegap allows developers for creating mobile apps using web technologies (HTML, CSS, JavaScript). Installing stuff for compiling those HTML, CSS, and JavaScript files is really a pain. Sometimes you get an error that takes hours to solve. Thankfully there&rsquo;s the Phonegap build service by Adobe that allows you to upload your source files and then after a second or two you can readily download the app installers for devices that you support. This is pretty neat since all you have to do is to write HTML, CSS, and JavaScript code like you always do, upload it to Phonegap build and boom! you now have an installer for every mobile app that you support. A QR code is also generated every time you update the source code of your app. You can then just use your phone or tablet&rsquo;s QR code reader and it will directly download the installer provided you&rsquo;re connected to the internet. There&rsquo;s also hydration which allows you to easily update already installed apps. So if you upload a new version of your app on Phonegap build, and then you open up the app on the mobile device hydration will detect the updates and then it will ask you to update the app or not. So no more need to re-install the app every time a new version is uploaded. Lastly there&rsquo;s also debugging tools provided that allows you to debug the current instance of the app on your mobile device from the browser. This is all really sweet and awesome but we still need to think about performance, app permissions, and writing the code in such a way that it will be easily maintainable. There&rsquo;s also this mobile development mindset that you have to get into. What I&rsquo;m saying is that you shouldn&rsquo;t really write Phonegap apps the way you write web applications. Because the environment is different. In a browser environment clicking on the link will load up a new page but in an app what it will do is open up the browser and then navigate to that link. So basically most of the things that you need to perform in the server side will have to be done using AJAX requests. Updating the UI can be done by using templates and so on.</p>

<h3>Node JS</h3>

<p>I was also able to re-aquaint with Node JS which I&rsquo;ve already used before in some of my personal projects. What has changed is that I&rsquo;ve started to look for existing packages that might be helpful to the thing I&rsquo;m trying to accomplish. Because before I tried to implement everything from scratch. And the solution that I come up with is mostly suboptimal.</p>

<h3>Fabric JS</h3>

<p>Fabric JS is a JavaScript library that can be used for generating images. Pretty much like MS Paint, Photoshop or GIMP. You can do things like insert text, shapes into a canvas which you can then export into an image.</p>

<h3>Social API&rsquo;s</h3>

<p>I&rsquo;ve also learned how to interact with various Social API&rsquo;s, such as Facebook&rsquo;s Graph API, Twitter API, and LinkedIn Sharing API. It was hard at first especially Facebook&rsquo;s API because there&rsquo;s no quality documentation available. And most of the resources you will find on the web refers to the previous versions of the API which isn&rsquo;t really that useful.</p>

<h3>Youtube and Vimeo API</h3>

<p>There&rsquo;s also this project in which needs to interact with the Youtube and Vimeo API. I&rsquo;ve had a bit of a trouble using the Youtube API because the API key that I was using didn&rsquo;t seem to work. The solution I came up with is to just delete the existing API key and create a new one. Another gotcha is that the type of key should be browser instead of server even if the request is actually made on the server.
As for the Vimeo API its a bit easier, they have Simple and Advanced API. The Simple API is pretty simple and you don&rsquo;t need application keys in order to make a request to it. The Advanced API is a bit more complex, but it was made simple because there&rsquo;s already an existing PHP library that made making requests to the API easier.</p>

<h3>Yahoo Finance API</h3>

<p>Yahoo Finance API is what I used to get the most recent stocks information about various companies from NYSE and NASDAQ. I used it on my <a href="http://wern-ancheta.com/projects/stockswitch">StockSwitch</a> project.</p>

<h3>Ionic</h3>

<p><a href="http://ionicframework.com/">Ionic</a> is a framework for developing hybrid mobile apps. This utilizes Phonegap&rsquo;s web view to render HTML and CSS and use JavaScript for interaction. Ionic comes with a pretty good looking UI, command line utilities and JavaScript APIs for various UI elements such as modals, tabs, pop-ups, scroll bars, and many others.</p>

<h3>Angular</h3>

<p><a href="https://angularjs.org/">Angular</a> comes in tandem with Ionic so there wasn&rsquo;t really much of a choice but to learn Angular as well when I picked Ionic for the job. Angular is a JavaScript framework from Google. Which allows us to easily structure our JavaScript code and to extend HTML through the use of directives.</p>

<h3>Amazon S3</h3>

<p>Amazon S3 is the file storage service that I use for storing file uploads for the apps that I built. Files can be stored into what they call &ldquo;buckets&rdquo;. These buckets are then assigned a unique URL which can be used to access the file. By default the files stored in each bucket are private. Which means only you the one who uploaded it can view it. If you want to make the file accessible to anyone then you have to make it public. I&rsquo;ve also used it together with Amazon Cloudfront, Amazon&rsquo;s content delivery web service. CDN for short.</p>

<h3>Amazon Cloudfront</h3>

<p>Amazon Cloudfront is Amazon&rsquo;s CDN. It can be used together with Amazon S3 to optimize the speed of delivery of the files which you have on an S3 bucket. One lesson I learned using Amazon Cloudfront is that its not supposed to be used when you&rsquo;re still developing the app which utilizes it. Because you often have to manually invalidate a file when you upload a new version of it on s3.</p>

<h3>Database Migrations</h3>

<p>Database migrations is what you use the first time you build your database. It is also what you use when you need to make changes to the database. Such as changing the data type of a specific column, renaming a column, or deleting it. Its a great way to keep track of the changes that you make on your database schema and share it with your team mates through version control. Its a good thing Laravel, my framework of choice when building web apps, already has database migration functionalities baked into it. All I have to do is create a new migration, write the code which will make the changes and also the corresponding code that will be executed when I rollback. After that I&rsquo;ll just execute <code>php artisan migrate</code> to commit the changes to the database.</p>

<h3>Google APIs</h3>

<p>There&rsquo;s a bunch of Google APIs available. If you can count the number of services that Google currently offers, that&rsquo;s almost the same number of APIs they&rsquo;ve got. So far I only had the chance to work with their Google+ login API and Google Calendar API. I used their Calendar API in my Bookr project. And the login API with all the apps that needed social login integration.</p>

<p>That&rsquo;s it! In the coming months I&rsquo;ll be updating this post and share some more of the things I&rsquo;ve learned on my current job.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things I learned on my second job]]></title>
    <link href="http://wern-ancheta.com/blog/2013/02/10/things-i-learned-on-my-second-job/"/>
    <updated>2013-02-10T15:58:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2013/02/10/things-i-learned-on-my-second-job</id>
    <content type="html"><![CDATA[<p>Its been 2 months since I joined Zencap, a web development company based in Istanbul, Turkey. Just like with my first job I&rsquo;m also working for them as a remote worker. In this blog post I&rsquo;m going to share some of the things that I learned while working with them.</p>

<!--More-->


<h3>Apache Solr</h3>

<p>Apache Solr is a search platform that&rsquo;s available for different languages like Ruby, PHP, and Java.
Solr&rsquo;s main feature is that its very fast. It returns either XML or JSON.
There&rsquo;s a library available for PHP which is the one that I used. It&rsquo;s called <a href="http://code.google.com/p/solr-php-client/">solr php client</a></p>

<p>Here&rsquo;s a sample query for accessing data that&rsquo;s available in the Solr server:</p>

<p><code>
http://localhost/solr/select/?q=id:%search&amp;wt=json&amp;rows=%max_results
</code></p>

<p>As you can see its just like accessing data from an API like the one provided by Twitter or Facebook.
You can use Solr via server-side or client side.</p>

<p>If you want to access its data via the server-side you can use the <code>file_get_contents()</code> php function or <code>curl</code>.
If you want to access its data via the client-side you can use the <code>$.ajax</code> jQuery function.
But if the Solr server is located on a different server you can use the <code>jsonp</code> data type.</p>

<h3>Wordpress Plugin Development</h3>

<p>I&rsquo;ve also learned about Wordpress Plugin Development and the Wordpress platform as a whole.
<a href="http://codex.wordpress.org/">Codex</a>, the main documentation site for Wordpress has some really good guides and reference for the different functions that are available from Wordpress.</p>

<p>When developing Wordpress plugins you will almost always have to hang out in these 2 pages:</p>

<ul>
<li><a href="http://codex.wordpress.org/Plugin_API/Filter_Reference">Filter Reference</a></li>
<li><a href="http://codex.wordpress.org/Plugin_API/Action_Reference">Action Reference</a></li>
</ul>


<p>In Wordpress filters are used for processing the things that are already outputted by Wordpress like the content of a blog post or the title of your blog. Filters are used to modify, add, or hide content.
This is very useful for filtering out things like profanity in blog posts.</p>

<p>Actions in Wordpress are events that happen inside wordpress like publishing a new blog post or creating a new page or activating a plugin. You can hook into these actions to execute a specific function that will do something when these events happen.</p>

<p>There&rsquo;s also a built-in class for accessing the Wordpress database which is the <a href="http://codex.wordpress.org/Class_Reference/wpdb">WPDB</a> which you will most likely use if the plugin that you&rsquo;re trying to build needs to persist data in a database (E.g for storing settings that your plugin will use).</p>

<h3>API&rsquo;s</h3>

<p>I&rsquo;ve also learned how to use API&rsquo;s like the <a href="http://www.flickr.com/services/api/">Flickr API</a>, <a href="http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ApiReference.html">Amazon Product Advertising API</a>, <a href="http://developer.ebay.com/common/api/">Ebay API</a>, and <a href="http://wiki.freebase.com/wiki/Freebase_API">Freebase API</a>.
Since this will be used by the Wordpress plugin that I&rsquo;m developing.</p>

<h4>Ebay Finding API</h4>

<p>The Ebay API was particularly easy to use since they have a very good documentation.
And by good documentation I mean things are easy to find.
The documentation also has everything that a developer who is just getting started with using the API wants to know.</p>

<h4>Amazon Product Advertising API</h4>

<p>The documentation for Amazon Product Advertising API was the exact opposite of the Ebay API documentation.
Things were hard to find and you can&rsquo;t even find examples on how to use the API on languages like PHP.
Thankfully I found this blog post on <a href="http://www.codediesel.com/php/accessing-amazon-product-advertising-api-in-php/">how to access the product advertising API in PHP</a> which made life easier.</p>

<h4>Freebase API</h4>

<p>The Freebase API was also easy to use because the API itself is relatively simple.
The Freebase API was divided into different services like Search, Image, Text, Topic, etc.
Each of those returns different sets of data in JSON format.
Freebase is already owned by Google so you can basically acquire an API key or access key from the Google API console.</p>

<h4>Flickr API</h4>

<p>The Flickr API is also comparable to the Amazon Product Advertising API when it comes to difficulty.
Though the documentation is very good it lacks some examples on how to access the API using different languages.
But the <a href="http://phpflickr.com/">PHPFlickr</a> library made my life easier.
All I had to do was to specify the App ID and App secret for my Flickr App which can be created at the <a href="http://www.flickr.com/services/apps/create/">App Garden</a> and then I can just call the methods which I need.</p>

<h4>Coinbase API</h4>

<p>Coinbase is sort of like Paypal but for Bitcoins. Bitcoin is a digital currency that can be used to pay for goods and services. Coinbase is a service that allows you to buy, use and accept bitcoins for payments.
The Coinbase API is used to interact with the Coinbase service. You can do a bunch of stuff with it like listing out all the changes on your Coinbase account, get the current balance in BTC (Bitcoin Currency), generate buttons to be used for paying for services and goods, retrieve contacts, orders, transactions any many more.
The things that you can do with the Coinbase API are all listed in the <a href="https://coinbase.com/api/doc">API Documentation</a>.</p>

<p>Authenticating API calls can be done using either the API Key or <a href="http://oauth.net/2/">OAuth2</a>.</p>

<p>YOu can also use the <a href="https://github.com/coinbase/coinbase-php">Coinbase PHP</a> library to easily communicate with the Coinbase service.</p>

<h4>Bitpay API</h4>

<p>Bitpay is just like Coinbase, a service for working with Bitcoins. As I&rsquo;m mainly using PHP for my projects I used the <a href="https://github.com/bitpay/php-client">official Bitpay SDK for PHP</a>.</p>

<h3>Drupal Custom Module Development</h3>

<p>I also learned a bit about custom module development in Drupal. I can say that its tough, you can&rsquo;t just hack your way out to produce a working solution. But the good thing is that most of the problems is more or less already solved by an existing module. All you have to do is install it and figure out how to integrate your own custom module with it.</p>

<h3>Responsive Web Design</h3>

<p>I also learned a bit of responsive web design. <a href="http://learn.shayhowe.com/advanced-html-css/">The Advanced HTML &amp; CSS guide</a> by Shay Howe really helped me a lot in learning responsive web design.</p>

<h3>Shopify App and Theme Development</h3>

<p>Recently I also learned about Shopify app and theme development. Shopify is an online e-commerce platform, you can use Shopify to create online stores to sell goods and services. Its sort of like Wordpress, Magento, Drupal, Joomla or other CMS (Content Management System) but only focused on e-commerce and you cannot actually download the platform and host it in a server somewhere. Shopify takes care of everything, that includes installing, upgrading and maintaining the software. But you have the freedom to choose your own domain.</p>

<p>Shopify really did a great job with their documentation, you can get up and running in a short time. Here are some links to get you started with Shopify development:</p>

<ul>
<li><a href="Shopify%20API">http://docs.shopify.com/api</a></li>
<li><a href="Shopify%20Themes">http://docs.shopify.com/themes</a></li>
</ul>


<h3>SPBAS</h3>

<p>Short for SolidPHP Business Automation Software. Just like as it sounds you can use SPBAS for automating your development business. You can use it for selling software. Pretty much like <a href="http://themeforest.net/">Themeforest</a> or <a href="http://codecanyon.net/">Codecanyon</a>. The only difference is that they won&rsquo;t take any commission for every sale you make. You just have to pay a one time fee, host it on your server, set it up and start selling.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Things I learned on my first job]]></title>
    <link href="http://wern-ancheta.com/blog/2012/08/23/things-i-learned-from-my-first-job/"/>
    <updated>2012-08-23T17:03:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2012/08/23/things-i-learned-from-my-first-job</id>
    <content type="html"><![CDATA[<p>Its been almost 2 months since I joined <a href="http://rnltek.com/">RNLTEK media</a>, a web design company based in Abucay, Bataan. I work for them remotely as a web developer. In this blog post I&rsquo;m going to share some of the things that I learned while working with them.</p>

<!--more-->


<h4>Non-technical</h4>

<ul>
<li>Nothing is ever written on stone, the clients mind changes all the time. It&rsquo;s always wise to prepare for
changes that the client might want to push to the live website.</li>
<li>As developers we should always keep ourselves updated of the latest technology, software development methodology, or just
things that happens in our industry. I&rsquo;ve written a post about <a href="http://anchetawern.github.com/blog/2012/08/16/how-to-stay-updated-as-a-developer/">how we can stay updated as developers</a>.</li>
<li>Not everything that the client wants is possible(or possible to accomplish in a short period of time) sometimes
you just have to admit that you can&rsquo;t do something rather than saying that you can do it and then the deadline
comes and you really have nothing to show.</li>
<li>Be honest to yourself. If you can&rsquo;t do it, you can&rsquo;t do it(but you probably can given enough time).</li>
<li>Sometimes you just have to do things outside of the ticking clock. What I mean by this is that even
if you&rsquo;re being paid for a job at an hourly rate sometimes you just have to do things that are part of your job
even if the clock is not ticking since its part of having pride in the job that you do and its a proof that you really love doing your job.
Some of the things that I do when not directly working with my project is learning the technologies that I might
probably use in the project. Just playing around with it will do. And by the time that you have to apply it to the project that you&rsquo;re
working on it will be as easy as pie.</li>
<li>Sometimes the payment gets delayed because of a bad weather or changes in the schedule of payment, or a problem in the company.
These are normal and you really have to wait. But if the delay gets longer than 1 week, then it really is a problem and you probably need
to set your own rules when it comes to delayed payments. Some people make it a point that when payment is delayed by
a specific period of time they will charge twice the amount that is supposed to be paid, if it gets delayed another day they multiply it by 2 again.
And we really can&rsquo;t blame them(especially the rockstars, superstars and ninjas) since they do their work well, they deliver(even before deadlines),
and they really take pride in the work that they do.</li>
<li>If you can&rsquo;t work on a specific day do your best to tell your boss in advanced atleast 1 day before the day that you will be out
tell your boss that you&rsquo;re gonna be out. But of course you won&rsquo;t be able to do this all the time. What if you suddenly got sick? or a
rushed family outing, or your house has been flooded. In those cases you need to have the mobile number of your boss so you can always
inform the situation even if you&rsquo;re not in front of the computer.</li>
<li>There are different ways in which companies try to track your time. Some use a time-tracking software like time doctor which also takes
screenshots of your desktop automatically. Some use a spreadsheet where you have to log what you&rsquo;ve done for that particular day</li>
</ul>


<h4>Technical</h4>

<p>There&rsquo;s actually too many to mention in detail so here&rsquo;s a few:</p>

<ul>
<li><strong>Openinviter</strong> &ndash; This is a PHP Class that is basically used for connecting to email service providers such as Gmail, Yahoo Mail and Hotmail</li>
<li><strong>Hotmail API</strong> &ndash; I actually gave up half the way while trying to retrieve contacts from hotmail since they&rsquo;re hashing the emails. But I might
go back to working on this once required by the client.</li>
<li><strong>Yahoo Query Language</strong> &ndash; just like SQL but you&rsquo;re just querying Yahoo&rsquo;s database. This is specifically useful for retrieving information
for your yahoo mail contacts.</li>
<li><strong>Facebook JavaScript SDK</strong> &ndash; I&rsquo;ve learned <a href="https://developers.facebook.com/docs/authentication/permissions/">how to set permissions</a> using the scope property in which you set to a collection of strings separated by
a comma(just a comma no other characters like whitespaces). I&rsquo;ve also learned how to access basic user information and friends information.
You can also specify extended permissions on the scope which allows you to do more awesome things using the Facebook API.</li>
<li><strong>Facebook meta tags</strong> &ndash; most of the time the Facebook documentation doesn&rsquo;t make any sense that&rsquo;s why articles like that of
David Walsh on <a href="http://davidwalsh.name/facebook-meta-tags">Facebook Open Graph Meta Tags</a> is always useful.</li>
<li><strong>CPanel</strong> &ndash; I also learned how to use Cpanel specifically the parts where you create database, managing the database. I also experimented
on the ssh stuff since I want to install Git on the server but that&rsquo;s just a failed attempt coz I don&rsquo;t have admin privileges.
I haven&rsquo;t really gotten much around with it because I might break something.</li>
<li><strong>FTP</strong> &ndash; I also learned FTP specifically the Filezilla. FTP is basically a way to connect to a remote server given that you have
the correct login information. I learned how to set file and folder permissions. There are 3 permission groups namely the <code>owner</code> , <code>group</code> and <code>public</code>
and there are also specific number for file permissions <code>4</code> for read, <code>2</code> for write and <code>1</code> for execute, <code>0</code> if there&rsquo;s no
permission to do anything on that file or folder. So if you want to enable just the read and write and not execute the permission is 6(just add the numbers together)
if the user can do anything on that file then the permission is <code>7</code></li>
<li><strong>Smileys on Skype</strong> &ndash; ok this last one is probably(definitely) irrelevant but I actually learned how to use smileys/emoticons on skype. I&rsquo;ve been
using skype for almost a year and I haven&rsquo;t realized that the happy face beside the SMS checkbox is where you can select emoticons to use on the
conversation.</li>
</ul>

]]></content>
  </entry>
  
</feed>
