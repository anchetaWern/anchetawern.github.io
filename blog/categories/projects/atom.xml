<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: projects | Wern Ancheta]]></title>
  <link href="http://wern-ancheta.com/blog/categories/projects/atom.xml" rel="self"/>
  <link href="http://wern-ancheta.com/"/>
  <updated>2015-12-29T14:00:56+08:00</updated>
  <id>http://wern-ancheta.com/</id>
  <author>
    <name><![CDATA[Wern Ancheta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introduction to pokeapi-json]]></title>
    <link href="http://wern-ancheta.com/blog/2015/11/21/introduction-to-pokeapi-json/"/>
    <updated>2015-11-21T19:53:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2015/11/21/introduction-to-pokeapi-json</id>
    <content type="html"><![CDATA[<p>Welcome to yet another post about a side-project of mine. This time it&rsquo;s a totally useless project. It&rsquo;s called <a href="https://github.com/anchetaWern/pokeapi-json">pokeapi-json</a>. As the name suggests, its the JSON version of the <a href="https://github.com/phalt/pokeapi">pokeapi</a> project. If you check their Github page, the data is basically in csv format. The only real difference is that I&rsquo;m using JSON on my project. Which is pretty much the same way they&rsquo;re serving the data on the <a href="http://pokeapi.co/">pokeapi website</a>. That&rsquo;s really all there is to it to this project. I had fun watching as my hard drive gets filled up by 6000+ Pokemon descriptions from different games. I had fun seeing the cute little Pokemon sprites filling the directory that I specified. Here&rsquo;s a screenshot:</p>

<p><img src="/images/posts/pokeapi/pokemon.png" alt="Pokemon sprites" /></p>

<p>Very cute right? There&rsquo;s a sense of achievement just seeing all 718 Pokemon sitting in a directory in your hard drive.</p>

<p>But I&rsquo;m not satisfied with this yet. I&rsquo;m planning on creating my own Pokedex app which has all the Pokemon data one can imagine. Currently there are 2 awesome Pokedex app out there:</p>

<ul>
<li><a href="https://play.google.com/store/apps/details?id=com.awestruck.poke">Pokedex &ndash; Dexter</a></li>
<li><a href="https://play.google.com/store/apps/details?id=com.brunosousa.pokeinfo">PokeInfo</a></li>
</ul>


<p>I&rsquo;m planning to create something much more awesome.</p>

<p>I&rsquo;ll probably need to scrape the following websites in order to get every possible information about Pokemon.</p>

<ul>
<li><a href="http://pokemondb.net/">PokemonDB.net</a></li>
<li><a href="http://www.serebii.net/">Serebii.net</a></li>
<li><a href="http://bulbapedia.bulbagarden.net/wiki/Main_Page">bulbapedia.bulbagarden.net</a></li>
</ul>


<p>I know it&rsquo;s not going to be easy but I&rsquo;ll try to do it for the love of Pokemon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Grade Viewer]]></title>
    <link href="http://wern-ancheta.com/blog/2015/11/03/introduction-to-grade-viewer/"/>
    <updated>2015-11-03T13:50:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2015/11/03/introduction-to-grade-viewer</id>
    <content type="html"><![CDATA[<p>As a teacher I want to show my students what grades they&rsquo;re getting. And the common tool for recording their scores is a spreadsheet. This would automatically compute their grade based on the scores they got from each of the activities. If you have already worked with a spreadsheet before, you might already know that its hard to present it to another person. Because you have to scroll horizontally in order to view every thing. And since the total score for an activity is located at the top row, so you also have to scroll to the top whenever they want to see the total score.  To put it simply, the eye of the viewer has to move a lot. Not to mention, they will see the grades of their classmates as well. So directly showing the grades in the spreadsheet is really a no go.</p>

<p>Luckily I can actually program things. That&rsquo;s why I built <a href="https://github.com/anchetaWern/gradeviewer">Grade Viewer</a>. This allows me to upload an excel spreadsheet, then specify the range that I want to target.</p>

<p><img src="/images/posts/gradeviewer/new-subject.png" alt="new subject" /></p>

<p>Then I enter the activities done for each component (lecture and laboratory) of the subject.</p>

<p><img src="/images/posts/gradeviewer/activities.png" alt="activities" /></p>

<p>Once that&rsquo;s done (provided I have specified every thing correctly) I can now go to the dashboard and click on the <em>view grades</em> link.</p>

<p><img src="/images/posts/gradeviewer/dashboard.png" alt="dashboard" /></p>

<p>This will list out all the subjects that I&rsquo;ve currently added. From here I can click on the <em>update</em> link to update the excel file and the settings. Or the <em>view</em> link to view the grades.</p>

<p><img src="/images/posts/gradeviewer/subjects.png" alt="subjects" /></p>

<p>Here&rsquo;s what the page for viewing grades looks like:</p>

<p><img src="/images/posts/gradeviewer/grades.png" alt="grades" /></p>

<p>It has a search feature but it can also navigate with previous and next links. Just below the name of the student is their grade for lecture and laboratory.  And below it is the break down. From here, the student can just ask any questions regarding their grades.</p>

<h3>Future Plans</h3>

<p>Nothing really. The project is in a pretty sweet spot right now when it comes to functionality. But just like many of my side projects, the underlying code has a lot of room for improvement.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Shotgun]]></title>
    <link href="http://wern-ancheta.com/blog/2015/10/25/introduction-to-shotgun/"/>
    <updated>2015-10-25T19:18:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2015/10/25/introduction-to-shotgun</id>
    <content type="html"><![CDATA[<p>One of my pain points as a teacher is checking student activities. That includes seat works, assignments and quizzes. Checking takes a lot of time. In one of my classes, it took me 4 hours to check 48 papers which has 50 items. The thing I hate is that its repetitive like doing factory work. That is why I started creating Shotgun, a quiz maker app. The idea is to create a quiz using it and then have students access the quiz at a specific time. Once the student has submitted the quiz, the score is automatically computed.</p>

<p>Shotgun allows for creating of classes. This allows the teacher to add the name of the class, some details and a textarea where the student details can be entered.</p>

<p><img src="/images/posts/shotgun/newclass.png" alt="create a new class" /></p>

<p>Once a class has been created, it is then listed in the classes page.</p>

<p><img src="/images/posts/shotgun/classes.png" alt="classes" /></p>

<p>From there, the update link can be clicked to access the page for updating the class. This is where the class details can be updated. Students that are no longer entering the class can also be dropped so they&rsquo;re no longer included in the list.</p>

<p><img src="/images/posts/shotgun/update-class.png" alt="classes" /></p>

<p>Next is the creation of new quizzes. Currently, only 3 types of quizzes can be created: identification, multiple choice and true/false. True/false still take a bit of effort though. As it uses the same functionality for multiple choice. Which means that true and false has to be added as a choice.</p>

<p><img src="/images/posts/shotgun/new-quiz.png" alt="classes" /></p>

<p>Once the quiz is created, it is listed in the quizzes page.</p>

<p><img src="/images/posts/shotgun/quizzes.png" alt="quizzes" /></p>

<p>A quiz can be scheduled by going to the scheduling page. This is where the quiz, class, the start time and end time can be added. The students can only take the quiz between the time specified.</p>

<p><img src="/images/posts/shotgun/schedule-quiz.png" alt="schedule quiz" /></p>

<p>While the time added in the quiz is not the same as the current time, the teacher can still update the details of the quiz such as the class who is going to take it, the quiz to be taken and also the start time and end time.</p>

<p><img src="/images/posts/shotgun/scheduled-quizzes.png" alt="scheduled quizzes" /></p>

<p>When it&rsquo;s time to take the quiz. The teacher then asks the students to access the quiz page on the browser. The teacher gives the quiz code and the students enter it together with their ID number.</p>

<p><img src="/images/posts/shotgun/start-quiz.png" alt="start quiz" /></p>

<p>If the current time is between the start time and end time, the actual quiz is rendered. Every quiz can only be taken once by a student, so once it has been taken, the student cannot take it again. And while taking the quiz, the student cannot open a new tab or open any other window in the computer. The quiz will be automatically submitted when this is done. This is done through JavaScript so if JavaScript is disabled in the browser, the quiz won&rsquo;t be rendered at all.</p>

<p><img src="/images/posts/shotgun/take-quiz.png" alt="take quiz" /></p>

<p>Once the quiz is done, the teacher can then view the scores of the students.</p>

<p><img src="/images/posts/shotgun/quiz-results.png" alt="take quiz" /></p>

<p>Or export it to a spreadsheet.</p>

<p><img src="/images/posts/shotgun/spreadsheet.png" alt="take quiz" /></p>

<p>From there, the teacher can just copy the scores and paste it to their own class record spreadsheet.</p>

<h3>Problems</h3>

<p>This is all well and good but there are still some hard problems that needs solving. First is the fact that the identification type of questions that you can create are rigid. There should only be a few acceptable answers. And since I&rsquo;m primarily teaching web development. There is a need for questions that asks students to code something. If you&rsquo;re a programmer you know that there can be many ways to solve a specific problem. There are many ways which you can code something. And it&rsquo;s close to impossible to consider all of those when adding an acceptable answer to a quiz item. One possible solution is to use the output of the code as the answer. So for example, if you ask the student to write a function that would return the sum of 2 numbers that were supplied as the arguments. So in the back-end, you add the following function:</p>

<p>```javascript
var sum = function(num1, num2){</p>

<pre><code>return num1 + num2;
</code></pre>

<p>};
```</p>

<p>Then you also add the arguments to be used. And then those arguments will be used to execute the function that you added. Then the program will check if it has the same result as the function that was coded by the student. If it does then the answer is considered correct. The only problem is that I still have no idea how to code that kind of thing. It&rsquo;s basically telling a program to execute a program that is stored in the string of text. The solution for now is to stick with multiple choice type of question.</p>

<p>Another problem is letter casing. Answers can be typed in many ways: ALL CAPS, Capitalized, or all lower case. I&rsquo;m still yet to figure out what&rsquo;s the best way to do this. Because some questions might require answers to be in a specific letter case and some don&rsquo;t. The only solution I can think of right now is to have an option in the quiz item that allows for specifying if the letter casing should match what was included in the answer list or not. If not then have the program convert the answers (answers by students, answers included by teacher) to lower case and then compare. If yes then compare the answers as it is.</p>

<h3>Future Plans</h3>

<p>Here are my future plans for this project.</p>

<ul>
<li>Add signup, forgot password and logout.</li>
<li>Add functionality for deleting answers and choices.</li>
<li>Random order for quiz items for every student. This will make it hard for students to copy answers from their classmates.</li>
<li>Support for code based answers (as mentioned in the problems section).</li>
</ul>


<p>That&rsquo;s it! If you want to use this project or contribute to it, you can <a href="https://github.com/anchetaWern/shotgun">download it on Github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Absentist]]></title>
    <link href="http://wern-ancheta.com/blog/2015/09/27/introduction-to-absentist/"/>
    <updated>2015-09-27T19:18:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2015/09/27/introduction-to-absentist</id>
    <content type="html"><![CDATA[<p>Lately I&rsquo;ve been working on a few projects that will ease up all the housekeeping work that I need to do as a teacher. Things like checking the attendance of students and checking the works of students.</p>

<p>When I started working as a teacher, I used a spreadsheet to monitor attendance. There&rsquo;s a column for the name of the student and a column for meeting days. That&rsquo;s about 36 columns for the laboratory, where I meet them 2 times per week. And then 18 columns for the lecture, where I meet them once per week. What I do is to put an <em>A</em> in the cell where the student and the day intersects if the student is absent. And when a student accumulates 2 of those <em>A&rsquo;s</em> in the laboratory, then they&rsquo;re ripe for dropping. And for the lecture, they only need one. When I say drop, it means dropping the class card of the student to the Student Affairs Office. I won&rsquo;t dive in too much with the details but this process is implemented so the students wouldn&rsquo;t want to be absent too often. Because its really a pain to claim class cards.</p>

<p>Going back to my old process in monitoring attendance, here&rsquo;s what the spreadsheet that I used for monitoring looks like:</p>

<p><img src="/images/posts/absentist/attendance.png" alt="attendance spreadsheet" /></p>

<p>Well, guess what. This quickly turned into a headache. Because there&rsquo;s no way to monitor which students are currently dropped, which one&rsquo;s are ripe for dropping and which one&rsquo;s has already returned their class cards to me.</p>

<p>As a programmer, I always want to make my work easy. Make the computer do most of the work as much as possible. So I decided to work on this project which I now call as Absentist. It&rsquo;s an attendance monitoring app which is custom built for my current needs. The way it works is simple. First, the teacher creates a class and adds the students. This part asks for the details such as the name of the class, some additional details that the teacher wants to enter, the number of absences needed before dropping the class card, the meeting days, then the start time and end time for each meeting day. Since the school already has a system for accessing class details. All I needed to do was to export it to a spreadsheet and then copy-paste it to a textarea. Then in the back-end, I simply parsed the pasted data so I can extract the ID Number, First Name, Last Name, Middle Initial and the gender of the student.</p>

<p><img src="/images/posts/absentist/newclass.png" alt="new class" /></p>

<p>Once a class has been created, it is listed in the classes page. This page has the links for updating a class, viewing students that are ripe for dropping and students that are already dropped.</p>

<p><img src="/images/posts/absentist/classes.png" alt="new class" /></p>

<p>Here&rsquo;s what the interface for dropping looks like:</p>

<p><img src="/images/posts/absentist/todrop.png" alt="to drop" /></p>

<p>From here, the teacher can do two things: first is to mark the class card as dropped. This should be done once all the class cards has been dropped. Currently there&rsquo;s no button for dropping everything with a single click but this would do for now. There should only be a few clicks needed. Next is the absences link, this shows all the days that the student was absent.</p>

<p><img src="/images/posts/absentist/absences.png" alt="absences" /></p>

<p>Next is the page for viewing class card that has already been dropped. From here, the teacher can click on the <em>claim</em> button to mark that the student has returned their class card. When this button is clicked, the absences counter for that student goes back to 0.</p>

<p><img src="/images/posts/absentist/dropped.png" alt="dropped" /></p>

<p>But how is the attendance actually updated you ask? It is through the attendance page. This uses the days and time that has been entered on the class settings. When the attendance page is accessed in a time between the start time and end time that was entered and the day matches. Then it will automatically show a list of students in the class. From there, the teacher can call on the students one by one. If a student is absent but is not excused then the absent button beside that student is clicked. If excused then the excused button is clicked. The only difference between the 2 is that excused absences aren&rsquo;t counted as an actual absence. Its just there for the sake of recording.</p>

<p><img src="/images/posts/absentist/update-attendance.png" alt="update attendance" /></p>

<p>Once the roll call is done, the teacher can then filter the list to only show the students who are absent or excused. This is useful for verifying if all the students in the list are really absent or excused. If not then the absent or excused button is clicked again to remove the student from the list. Once that&rsquo;s done, the <em>update attendance</em> button is clicked to commit the changes to the database. This increments the absences counter for the student if they are absent. Or marks the student to be dropped if the absences counter becomes equal to that of what was added to the class settings.</p>

<p><img src="/images/posts/absentist/show-absent.png" alt="update attendance" /></p>

<h3>Future Plans</h3>

<p>Future plans for this project includes the following:</p>

<ul>
<li>Adding students one at a time. This would be useful for when a student comes in late or for instances where there&rsquo;s no available spreadsheet export for student data.</li>
<li>Different start and end times for each meeting day.</li>
<li>User Documentation</li>
</ul>


<p>That&rsquo;s it! If you want to use this project or contribute to it, you can <a href="https://github.com/anchetaWern/absentist">download it on Github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Naughtyfire]]></title>
    <link href="http://wern-ancheta.com/blog/2015/08/15/introduction-to-naughtyfire/"/>
    <updated>2015-08-15T14:36:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2015/08/15/introduction-to-naughtyfire</id>
    <content type="html"><![CDATA[<p>Welcome to yet another introduction to a side-project of mine. This time I&rsquo;d like to talk about Naughtyfire.</p>

<p>Naughtyfire allows remote (home-based) developers to automatically notify their boss that they are taking a day off for a specific date. Settings, clients and events can be set in the web interface. All you need to do is to put it in the <code>www</code> or <code>public_html</code> directory in your home folder.</p>

<p>Notifications are done via email through a mail provider of your choice. I&rsquo;ve only tested Mandrill configuration but it should work with other mail service providers supported by SwiftMailer.</p>

<p>This project is meant to be used locally on your own computer. But you can also upload it on a server and set it up from there.</p>

<h3>Dependencies</h3>

<ul>
<li>Apache</li>
<li>MySQL</li>
<li>Composer</li>
<li>SwiftMailer</li>
<li>Phinx</li>
</ul>


<h3>How to Use</h3>

<ul>
<li>Put it on your <code>www</code> or <code>public_html</code> directory</li>
<li>If you have installed it on a folder under your <code>www</code> or <code>public_html</code> directory, you have to setup a virtual host for that path and then use it when accessing it from the browser. Accessing it via <code>http://localhost/naughtyfire</code> wouldn&rsquo;t work since the assets are linked using an absolute path. I recommend seetting the host name to <code>naughtyfire.dev</code>.</li>
<li>Navigate to the naughtyfire root directory then install the libraries by executing <code>composer install</code> on your terminal.</li>
<li>Create the database that naughtyfire will use.</li>
<li>Create a <code>phinx.yml</code> file and update the database credentials. You only have to update the values under the <code>development</code> configuration. Specifically the <code>name</code>, <code>user</code> and <code>pass</code>.</li>
</ul>


<p>```
paths:</p>

<pre><code>migrations: %%PHINX_CONFIG_DIR%%/migrations
</code></pre>

<p>environments:</p>

<pre><code>default_migration_table: phinxlog
default_database: development
production:
    adapter: mysql
    host: localhost
    name: production_db
    user: root
    pass: ''
    port: 3306
    charset: utf8

development:
    adapter: mysql
    host: localhost
    name: naughtyfire
    user: root
    pass: ''
    port: 3306
    charset: utf8

testing:
    adapter: mysql
    host: localhost
    name: testing_db
    user: root
    pass: ''
    port: 3306
    charset: utf8
</code></pre>

<p>```</p>

<ul>
<li><p>Access the host that you have selected (e.g. <code>naughtyfire.dev</code>) from your browser. The default page is the page for creating new events. But you can also access the following pages.</p>

<ul>
<li><code>/settings</code> &ndash; for updating the settings. Here you can set the twilio credentials and mail settings. If you leave the twilio credentials or mail settings blank, the notification wouldn&rsquo;t work. Choose either one of those or both and then supply the correct values.</li>
<li><code>/recepients</code> &ndash; for listing current recepients.</li>
<li><code>/recepients/new</code> &ndash; for creating a new recepient.</li>
</ul>
</li>
<li><p>Open cron.</p></li>
</ul>


<p><code>
crontab -e
</code></p>

<p>Use <code>wget</code> to request for the notifer URL once a day.</p>

<p><code>
0 0 * * * wget -O - http://naughtyfire.dev/notify &gt;/dev/null 2&gt;&amp;1
</code></p>

<p>Here are a couple of screenshots of the app.</p>

<p><img src="/images/posts/naughtyfire/new-event.png" alt="new event" /></p>

<p><img src="/images/posts/naughtyfire/mail-sample.png" alt="mail sample" /></p>

<p>You can find more details about this project on <a href="/projects/naughtyfire/">its project page</a>.</p>

<p>If you have an idea or you want to contribute to this project, feel free to check it out, fork it, or create an issue in its <a href="https://github.com/anchetaWern/naughtyfire">github repo</a>.</p>
]]></content>
  </entry>
  
</feed>
