<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: projects | Wern Ancheta]]></title>
  <link href="http://anchetawern.github.io/blog/categories/projects/atom.xml" rel="self"/>
  <link href="http://anchetawern.github.io/"/>
  <updated>2015-02-08T08:22:17+08:00</updated>
  <id>http://anchetawern.github.io/</id>
  <author>
    <name><![CDATA[Wern Ancheta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introduction to Laravel Bootstrap Starter]]></title>
    <link href="http://anchetawern.github.io/blog/2014/10/04/introduction-ton-l4b3/"/>
    <updated>2014-10-04T19:10:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2014/10/04/introduction-ton-l4b3</id>
    <content type="html"><![CDATA[<p>I&rsquo;m still on side-project frenzy. This week its the <a href="https://github.com/anchetaWern/laravel-bootstrap-starter">Laravel Bootstrap Starter</a>.
I created this project to make it easier for me to setup a Laravel project faster. I&rsquo;m using Laravel in the company that I work for and every time I start a new project I have to install it via composer, configure it so that it doesn&rsquo;t show <code>/public</code> in the URL. From there I add the default controllers, add the sign up and login code, add the functionality for updating and resetting password, install node, grunt and then bower. And then install the grunt plugins that I need for front-end performance optimization. The list goes on, and just setting up a project may take a whole day. That&rsquo;s why I decided to create this project.</p>

<h3>Features</h3>

<p>Like most of the projects that I decided to do so far. It only contains the essential features:</p>

<ul>
<li>sign up and login</li>
<li>resetting passwords</li>
<li>admin (updating account information)</li>
</ul>


<h3>Future Plans</h3>

<p>As I move along with this project I&rsquo;m gonna be adding the following features:</p>

<ul>
<li><strong>social login</strong> &ndash; google, twitter, facebook, linkedin</li>
<li><strong>database backup</strong> &ndash; every project must have an automated database backup functionality. I&rsquo;m thinking of using cron for running the backup script and then upload the backup to an Amazon s3 bucket.</li>
<li><strong>generators</strong> &ndash; there are 2 projects doing this already, one is <a href="https://github.com/JeffreyWay/Laravel-4-Generators">Jeffrey Way&rsquo;s Laravel 4 Generators</a> and the other is <a href="https://github.com/wdollar/Laravel-4-Generators-Bootstrap-3">Wes Dollar&rsquo;s forked version</a>, both looks pretty good. I think I&rsquo;ll be able to get some ideas from these projects. Basically the plan here is to be able to use the terminal for generating boilerplate code which I can then build upon.</li>
<li><strong>build tool integration</strong> &ndash; I want to be able to just hit one command and it will install and configure everything that I need to get the project started. Yeoman seems to be a very good fit for this.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Ahead]]></title>
    <link href="http://anchetawern.github.io/blog/2014/09/28/introduction-to-ahead/"/>
    <updated>2014-09-28T09:20:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2014/09/28/introduction-to-ahead</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been in side-project frenzy these past few weeks. And this time I&rsquo;m writing again about another side-project that I&rsquo;ve been working on, its called <a href="https://github.com/anchetaWern/ahead">Ahead</a>. Ahead is an app that allows you to schedule posts to your facebook, twitter and linkedin accounts. Pretty much like Buffer. But Buffer has limits for free accounts, that&rsquo;s why I built this app so I can schedule posts without limits.</p>

<h3>How to Use</h3>

<p>You can use Ahead by going to its <a href="http://ec2-54-68-251-216.us-west-2.compute.amazonaws.com/">demo website</a>. Create and account then login. Once logged in, go to the networks page and connect the accounts where you want to publish by clicking on the connect button:</p>

<p><img src="/images/posts/intro_to_ahead/networks.png" alt="networks" /></p>

<p>Once your accounts has been connected, you can now start scheduling posts:</p>

<p><img src="/images/posts/intro_to_ahead/schedulenew_post.png" alt="schedule new post" /></p>

<p>You can check the time in which your post will be published from the posts page. From the published column you can also see if your post has already been published or not:</p>

<p><img src="/images/posts/intro_to_ahead/posts.png" alt="posts" /></p>

<p>If you don&rsquo;t want to select the networks in which you want to publish all the time, you can visit the settings page and then select the networks which you want to select by default:</p>

<p><img src="/images/posts/intro_to_ahead/settings.png" alt="settings" /></p>

<p>If you don&rsquo;t want your posts to be published one hour after another you can also add custom schedules by visiting the schedules page:</p>

<p><img src="/images/posts/intro_to_ahead/schedule.png" alt="new schedule" /></p>

<p>Just select an interval that you want and it will be available as an option when you schedule a new post. Of course you can also select a default schedule from the settings page once you&rsquo;re done creating a schedule. Currently only the following intervals are supported:</p>

<ul>
<li>every 1 hour</li>
<li>every 2 hours</li>
<li>every 3 hours</li>
<li>every 4 hours</li>
<li>every 5 hours</li>
<li>random time in the next 72 hours (3 days)</li>
<li>random time in the next 168 hours (1 week)</li>
</ul>


<h3>Future Plans</h3>

<p>Ahead is still in early stages of development. Its already quite functional but I&rsquo;m planning to add the following features in the future:</p>

<ul>
<li><strong>Publish posts without links</strong> &ndash; currently it can only publish posts with links in it. I originally envisioned this project for my personal use only and I don&rsquo;t really schedule posts without links in it.</li>
<li><strong>Add social login</strong> &ndash; currently you can only start using the app by signing up with your email.</li>
<li><strong>Email verification</strong> &ndash; currently you can use fake emails when signing up.</li>
<li><strong>Editing and deleting posts</strong> &ndash; currently you can no longer edit posts that has already been scheduled. I&rsquo;m planning to add an edit or delete feature in order for users to be able to make changes to their scheduled posts.</li>
<li><strong>Immediate publishing</strong> &ndash; currently only scheduled posts are supported.</li>
<li><strong>Add custom intervals to schedules</strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Publicizr]]></title>
    <link href="http://anchetawern.github.io/blog/2014/09/21/introduction-to-publicizr/"/>
    <updated>2014-09-21T09:11:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2014/09/21/introduction-to-publicizr</id>
    <content type="html"><![CDATA[<p>A couple of weeks ago I started building a project called <a href="https://github.com/anchetaWern/publicizr">Publicizr</a>. I created it for the sole purpose of easily publishing a link to my Facebook, Twitter and LinkedIn profile whenever I publish a new post on this blog.</p>

<h3>Dependencies</h3>

<p>This project depends on the following Ruby gems in order to work:</p>

<ul>
<li><a href="https://github.com/hexgnu/linkedin">linkedin</a> &ndash; used for connecting/publishing to Linkedin.</li>
<li><a href="https://github.com/sferik/twitter">twitter</a> &ndash; used for connecting/publishing to Twitter.</li>
<li><a href="https://github.com/arsduo/koala">koala</a> &ndash; used for connecting/publishing to Facebook.</li>
<li><a href="https://github.com/mperham/em-resolv-replace">em-resolv-replace</a> &ndash; used for fixing the issue with koala not being able to publish to Facebook from the localhost.</li>
</ul>


<h3>How to Install</h3>

<p>You can install Publicizr by requiring the following Ruby gems in the Gemfile used by your static blogging engine:</p>

<p><code>
gem 'linkedin', '~&gt; 1.0.0'
gem 'twitter', '~&gt; 5.11.0'
gem 'koala', '~&gt; 1.10.1'
gem 'em-resolv-replace', '~&gt; 1.1.3'
</code></p>

<p>Once you&rsquo;ve added those, save the changes to the Gemfile then execute <code>bundle install</code> on your terminal.</p>

<p>Once everything is installed, look for the <code>Rakefile</code> used in your static blogging engine. For Octopress/Jekyll its located in its root directory. Next add the following on the <code>Rakefile</code>. If the <code>Rakefile</code> is requiring other gems, just put these below those gems. If not then put it on the first line of the <code>Rakefile</code>:</p>

<p><code>
require "twitter"
require "koala"
require "linkedin"
require "resolv-replace"
</code></p>

<p>Next, put these on the last line of the <code>Rakefile</code>:</p>

<p>```
desc &ldquo;Publish post to facebook, twitter and linkedin&rdquo;
task :publish, :content do |t, args|</p>

<p>  if args.content</p>

<pre><code>post = args.content


#start post to twitter
tweet = Twitter::REST::Client.new do |config|
  config.consumer_key        = "{twitter-app-key}"
  config.consumer_secret     = "{twitter-app-secret}"
  config.access_token        = "{twitter-user-token}"
  config.access_token_secret = "{twitter-user-secret}"
end

tweet.update(post)
#end post to twitter

#start post to facebook
@graph = Koala::Facebook::API.new("{facebook-user-token}")
@graph.put_wall_post(post)
#end post to facebook

#start post to linkedin
linked_in = LinkedIn::Client.new('{linkedin-app-key}', '{linkedin-app-secret}')
linked_in.authorize_from_access('{linkedin-user-token}', '{linkedin-user-secret}')

linked_in.add_share(:comment =&gt; post)
#end post to linkedin

puts "Your post has been shared!"
</code></pre>

<p>  else</p>

<pre><code>puts "Supply your post!"
</code></pre>

<p>  end</p>

<p>end
```</p>

<p>Basically what it does is declaring a rake task that will publish whatever content you pass into it. If you don&rsquo;t need to publish to all 3 (Facebook, Twitter, LinkedIn), feel free to comment out the lines between the lines which says &lsquo;#start post to facebook&rsquo; and &lsquo;#end post to facebook&rsquo;. Just replace &lsquo;facebook&rsquo; with your social network of choice.</p>

<p>At this point the project still requires you to create your own app on each of the social networks. You can do that by visiting the following links and then look for the page for creating a new app:</p>

<ul>
<li><a href="https://developers.facebook.com/">Facebook</a></li>
<li><a href="https://dev.twitter.com/">Twitter</a></li>
<li><a href="https://developer.linkedin.com/">LinkedIn</a></li>
</ul>


<p>Once that&rsquo;s done, you also need to create an app using your language of choice (PHP, Ruby, or Python) that will allow you to retrieve user tokens. If you&rsquo;re primarily a PHP developer you can use the following libraries to ease the work that you need to do:</p>

<ul>
<li><a href="https://github.com/thephpleague/oauth2-client">thephpleagues/oauth2-client</a> &ndash; supports facebook and linkedin.</li>
<li><a href="https://github.com/themattharris/tmhOAuth">thmOAuth</a> &ndash; supports twitter.</li>
</ul>


<p>Once you&rsquo;ve acquired the applications keys and user tokens you can now replace the values which says something like <code>{twitter-app-key}</code>, <code>{twitter-app-secret}</code> on the <code>publish</code> task in your <code>Rakefile</code>. Basically anything that&rsquo;s wrapped in curly brackets, you need to replace those in order for the plugin to fully function.</p>

<h3>How to Use</h3>

<p>You can use publicizr by executing the <code>publish</code> task then supplying the content of your post as an argument:</p>

<p><code>
rake publish["new blog post: newsletters I subscribe to http://wern-ancheta.com/blog/2014/09/07/newsletters-i-subscribe-to/"]
</code></p>

<h3>Support</h3>

<p>Any Ruby based static blogging engine is supported. You can check out this <a href="http://blog.iwantmyname.com/2014/05/the-updated-big-list-of-static-website-generators-for-your-site-blog-or-wiki.html">big list of static blogging engines</a> and look for the ones that are built using Ruby.</p>

<h3>Future Plans</h3>

<p>Publicizr is already useable but still requires a bunch of work in order to get setup and running. That&rsquo;s why I plan to add the following features in the future:</p>

<ul>
<li>automatically detect last post that was created and publish it automatically when the blog is deployed.</li>
<li>website for retrieving user access tokens which you can then paste into the rake file. This removes the need for creating your own apps and retrieving your keys from it.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Contact plugin for Octopress]]></title>
    <link href="http://anchetawern.github.io/blog/2014/08/02/introduction-to-contact-plugin-for-octopress/"/>
    <updated>2014-08-02T21:01:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2014/08/02/introduction-to-contact-plugin-for-octopress</id>
    <content type="html"><![CDATA[<p>In this blog post I&rsquo;ll be introducing the <a href="https://github.com/anchetaWern/jekyll-contact">Contact plugin for Octopress</a>.
This plugin allows you to create contact forms with ease. Its using the <a href="http://pooleapp.com/">pooleapp.com</a> for saving the data for the forms that are submitted.</p>

<h3>Create a Pooleapp account</h3>

<p>First lets go through pooleapp. Poole is a free, hosted data store for static sites. It allows you to post data into it and then later on you can retrieve the data using a simple API.</p>

<p>You don&rsquo;t have to register to start using pooleapp but its recommended so that you can keep track of the forms that you create. Another bonus feature is that when someones submits a data to your contact form, pooleapp will immediately notify you via email.</p>

<p>Once you&rsquo;ve registered an account, you can now create a new form. Just give your form a unique name and click on the &lsquo;create form&rsquo; button. Once created, pooleapp will ask you for the email in which you want the notifications to be sent to.</p>

<h3>Installing the plugin</h3>

<p>Octopress doesn&rsquo;t really have a plugin system so we&rsquo;ll have to do things manually. First thing that you need to do is to add the <code>contact.rb</code> file into the <code>octopress/plugins</code> directory.</p>

<p>So that we can show a success message once the visitor submits his data through the contact form, we also need to add the <code>contact.js</code> file inside the <code>source/javascripts</code> directory. Basically what it does is to check for the existence of the <code>form</code> query parameter. If it exists then it makes the success message visible.</p>

<p>For the styling, add the <code>_contact.scss</code> file inside the <code>sass/partials</code> directory. Then in your <code>sass/_partials.scss</code> file, import the css for the contact form by adding the following on the last line:</p>

<p><code>
@import "partials/contact";
</code></p>

<p>Lastly, under the <code>source/_includes/custom</code> directory, add a script tag that points out to the <code>contact.js</code> file on the last line:</p>

<p>```</p>

<script src="/javascripts/contact.js"></script>


<p>```</p>

<h3>Using the plugin</h3>

<p>To use the plugin in any of your pages, simply use the <code>contact</code> liquid tag then supply your pooleapp API key as the first argument, and the redirect URL for when the form is submitted:</p>

<p>
<code>
{% contact YOUR_POOLE_APP_API_KEY http://YOURSITE.COM/PAGE?form=ok#alert-box %}
</code>
</p>

<h3>Demo</h3>

<p>You can try out the demo on the <a href="http://wern-ancheta.com/aboutme">about me page of this blog</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Octo-wysiwyg]]></title>
    <link href="http://anchetawern.github.io/blog/2014/02/20/introduction-to-octo-wysiwyg/"/>
    <updated>2014-02-20T05:30:00+08:00</updated>
    <id>http://anchetawern.github.io/blog/2014/02/20/introduction-to-octo-wysiwyg</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve quit my job recently so lots of time freed up for me to learn something and work on personal projects that I&rsquo;ve been thinking of doing since last year. And so the past couple of weeks I&rsquo;ve been busy working on a personal project and learning more on tooling to improve my productivity as a developer.</p>

<!--more-->


<p>Enough about my life story. This blog post is about the project that I was working on recently, and that is Octo-wysiwyg. The first project that I finally got started among the many others that have been buried in the todo list for ages.</p>

<p>Octo-wysiwyg is an app for easily creating posts in Octopress. Yes Octopress is pretty much complete and you can easily create posts by opening up a terminal and using the <code>rake new_post['title of your blog post']</code> command. But after that you usually have to search for the newly created file in the <code>octopress/source/_posts</code> folder and open it up on a text-editor before you can begin writing. That&rsquo;s ok but you have to go through those  steps every time you want to write something. And also you don&rsquo;t get a live HTML preview of the things that you&rsquo;re writing since you are on a text-editor. You can probably use sites like <a href="http://markable.in/editor/">markable.in</a> or <a href="http://dillinger.io/">dillinger.io</a> if you only want a live preview but after that you would need to paste what you have written into the original markdown file that was generated by Octopress.</p>

<p>Enter Octo-wysiwyg, this app allows you to easily create posts by adding keyboard shortcuts to generate common markdown syntax like headings, images, blockquotes, and code blocks.</p>

<h3>Installation</h3>

<p>Copy it anywhere on your file system. Then update the <code>config.rb</code> to include the proper file paths.</p>

<p>This app depends on the following ruby gems so you also have to install it before you can start using the app:</p>

<ul>
<li>sinatra</li>
<li>redcarpet</li>
<li>data_uri</li>
<li>stringex</li>
</ul>


<h3>Using the App</h3>

<p>Execute the following command from the terminal:</p>

<p><code>
ruby /path/to/octo-wysiwyg/octo-wysiwyg.rb
</code></p>

<p>Or if you want to use <a href="http://rubygems.org/gems/shotgun">shotgun</a>:</p>

<p><code>
shotgun /path/to/octo-wysiwyg/octo-wysiwyg.rb
</code></p>

<p>Then access it from the browser when using Sinatra:</p>

<p><code>
http://localhost:4567
</code></p>

<p>Or shotgun:</p>

<p><code>
http://localhost:9393
</code></p>

<h3>Creating a New Post</h3>

<p>You can create a new post by accessing <code>http://localhost:9393/new</code> from your browser. The port number assumes that you&rsquo;re using the shotgun ruby gem. If you&rsquo;re using sinatra use <code>4567</code> as the port. This will give you the following UI:</p>

<p><img src="/images/posts/2014-02-20-introduction-to-octo-wysiwyg/newpost.png" alt="new post" /></p>

<p>All you have to do is input the title of your post and click the &lsquo;create post&rsquo; button or press enter.</p>

<h3>Updating Existing Posts</h3>

<p>There are two ways to update existing posts. You can either do it from the edit page (<a href="http://localhost:9393/edit">http://localhost:9393/edit</a>) or from the list page (<a href="http://localhost:9393/list">http://localhost:9393/list</a>). If you do it from the edit page you will have to browse for a markdown file from the <code>octopress/source/_posts</code> folder and click on &lsquo;upload&rsquo;.
If you do it from the list page, you can simply select from the list of posts by clicking on the link:</p>

<p><img src="/images/posts/2014-02-20-introduction-to-octo-wysiwyg/posts.png" alt="list of posts" /></p>

<p>Once you&rsquo;ve selected a post you will be redirected to the edit page which looks something like this:
<img src="/images/posts/2014-02-20-introduction-to-octo-wysiwyg/octowysiwyg.png" alt="edit page" /></p>

<p>Note that the posts are arranged based on the date that the post was first published.</p>

<h3>Deleting Posts</h3>

<p>You cannot delete existing posts. However, you can set the post to <code>publish: false</code>. This will prevent the post from getting published on your blog the next time you deploy using <code>rake gen_deploy</code>.</p>

<h3>Keyboard Shortcuts</h3>

<p>You can use the following keyboard shortcuts to easily generate markdown syntax:</p>

<ul>
<li><code>ctrl + s</code> &ndash; save post</li>
<li><code>ctrl + 1</code> to <code>ctrl + 6</code> &ndash; headings 1 to 6</li>
<li><code>f1</code> &ndash; code block</li>
<li><code>f2</code> &ndash; read more link</li>
<li><code>ctrl + b</code> &ndash; bold</li>
<li><code>ctrl + i</code> &ndash; italic</li>
<li><code>ctrl + q</code> &ndash; blockquote</li>
<li><code>ctrl + g</code> &ndash; insert markdown image tag</li>
<li><code>ctrl + u</code> &ndash; upload image &ndash; this will prompt you to upload an image, the uploaded image will be automatically added on the current document and the uploaded image will be copied over to the octopress image directory that you selected</li>
</ul>


<h3>Demo</h3>

<p>A demo of the app is available <a href="http://ruby-wern.rhcloud.com/list">here</a> though I&rsquo;ve disabled the upload feature to prevent usage abuse.</p>

<h3>Future Plans</h3>

<p>As people usually say, start with something simple and then iterate afterwards. I&rsquo;m pretty much satisfied with the current features of this app now. The proof is that I&rsquo;m currently using it to write this blog post. However I want to make use of my remaining free time to work on another project so I&rsquo;m going to suspend the development of this project for now. Here are some of the features that I plan to add in the future:</p>

<ul>
<li>emmet-like syntax for generating html and css code</li>
<li>creating pages</li>
<li>line numbers for markdown</li>
</ul>


<h3>Contribute</h3>

<p>If you want to contribute to this project, or you noticed some issues, or you want to throw in some ideas for the next version please visit the <a href="https://github.com/anchetaWern/octo-wysiwyg">octo-wysiwyg github page</a> I&rsquo;d really appreciate i</p>
]]></content>
  </entry>
  
</feed>
