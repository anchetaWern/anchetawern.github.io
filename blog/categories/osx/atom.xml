<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: osx | Wern Ancheta]]></title>
  <link href="http://wern-ancheta.com/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://wern-ancheta.com/"/>
  <updated>2015-10-25T07:28:41+08:00</updated>
  <id>http://wern-ancheta.com/</id>
  <author>
    <name><![CDATA[Wern Ancheta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My OSX Development Environment]]></title>
    <link href="http://wern-ancheta.com/blog/2015/08/09/my-osx-development-environment/"/>
    <updated>2015-08-09T20:32:00+08:00</updated>
    <id>http://wern-ancheta.com/blog/2015/08/09/my-osx-development-environment</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve had my fair share of <a href="/blog/2013/07/13/my-linux-development-environment/">Windows</a> and <a href="/blog/2013/05/19/my-windows-development-environment/">Linux</a> development. This time I&rsquo;d like to share with you the development tools I use in my OSX machine.</p>

<h3>Homebrew</h3>

<p>A must have for every Mac Developer, the missing package manager for OS X. If you came from Ubuntu, this is basically the same as <code>apt-get</code>. You can install it using ruby. Ruby already comes pre-installed in mac so you can execute the following command directly.</p>

<p><code>
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
</code></p>

<p>Once that&rsquo;s done you can now install every developer that you can think of by using <code>brew install</code>. Packages in Homebrew are called formulas, you can find them on <a href="http://brewformulas.org/">homebrewformulas.org</a> or in the <a href="https://github.com/Homebrew/homebrew/tree/master/Library/Formula">Homebrew repository at Github</a>.</p>

<h3>MAMP</h3>

<p>MAMP is the equivalent of the LAMP stack on Mac. It basically stands for Mac Apache MySQL PHP. You can install it by downloading the installer from the <a href="https://www.mamp.info/en/downloads/">MAMP downloads page</a>. These days I only use A of MAMP for testing scripts. Since I usually develop PHP applications using the Laravel framework which can already serve your project while you&rsquo;re developing. This basically takes care of the A and P part of MAMP.</p>

<h3>Sublime Text</h3>

<p>I&rsquo;m not a big fan of IDE&rsquo;s (Integrated Development Environment) so I use a plain old text editor when writing code. My text editor of choice is still Sublime Text mainly due to how its simplicity and good performance. It just allows me to code without having to think too much about how I can use the different bells and whistles. You can download the installer from the <a href="http://www.sublimetext.com/2">downloads page</a>.</p>

<h3>Node</h3>

<p>Node has become quite the dependency for every thing. Development tools such as Gulp and Sass requires Node.js to be installed. Well not exactly Node.js but NPM. But why would you want to install Node without NPM? They&rsquo;re like inseparable twin brothers. So better install Node which already comes with NPM since sooner or later you would also need Node anyway. You can install Node by using the Node Version Manager (NVM). You can download it by using curl and then piping it to the shell:</p>

<p><code>
curl https://raw.github.com/creationix/nvm/master/install.sh | sh
</code></p>

<p>Once that&rsquo;s done, you can list the node versions that are currently available.</p>

<p><code>
nvm ls-remote
</code></p>

<p>From there you can install the version that you want.</p>

<p><code>
nvm install v0.12.7
</code></p>

<p>And then finally set it as default.</p>

<p><code>
nvm alias default v0.12.7
nvm use default
</code></p>

<h3>Git</h3>

<p>Git is my version control system of choice. You can install it via homebrew.</p>

<p><code>
brew install git
</code></p>

<p>Don&rsquo;t forget to set your global config after installing:</p>

<p><code>
git config --global user.name "Wern Ancheta"
git config --global user.email "myemail@gmail.com"
</code></p>

<p>You can also set the credential helper to use osxkeychain. This allows you to cache your password so that you don&rsquo;t need to enter it every time you push to the server.</p>

<p><code>
git config --global credential.helper osxkeychain
</code></p>

<h3>Xcode</h3>

<p>I needed Xcode to compile and build the Cordova app that I was developing. Xcode comes with an iOS simulator which is great for testing Cordova apps to be deployed on an iOS device. You can install it using the following command:</p>

<p><code>
xcode-select --install
</code></p>

<p>If you don&rsquo;t want to deal with the command-line, you can simply get it from <a href="https://developer.apple.com/downloads/">the apple developer downloads page</a> and look for the most recent version of Xcode. Be warned that Xcode is 2.6GB in size so it might take a while to download depending on your download speed.</p>

<h3>Cordova</h3>

<p>Cordova is a set of device APIs that allows mobile app developers to access native device functions such as the camera through JavaScript. You can install it by using npm. Cordova basically does all the heavy-lifting when it comes to developing Hybrid Mobile Apps.</p>

<p><code>
npm install -g cordova
</code></p>

<h3>Ionic</h3>

<p>Ionic is my Hybrid Mobile App Framework of choice. You can also install it with npm.</p>

<p><code>
npm install -g ionic
</code></p>
]]></content>
  </entry>
  
</feed>
